NUCLEI_SDK_BUILD = $(NUCLEI_SDK_ROOT)/Build
# Include your local and global makefile variables
# SOC, DOWNLOAD, PFLOAT, NEWLIB etc.
# Makefile.global should be placed in $(NUCLEI_SDK_ROOT)/Build
# Makefile.local should be placed together with application Makefile in your own application folder
# Sample content for this Makefile.local or Makefile.global
# SOC ?= demosoc
# DOWNLOAD ?= ilm
EXTRA_MKS := $(wildcard Makefile.local $(NUCLEI_SDK_BUILD)/Makefile.global)
ifneq ("$(strip $(EXTRA_MKS))", "")
$(info Obtaining addtional make variables from $(EXTRA_MKS))
include $(EXTRA_MKS)
endif

# Variables could be passed in make command
# NOTE: CORE and BOARD are defined in Makefile.soc.$(SOC)
# BOARD and SOC name should always be lower-case
## Available choices:
## The name of sub directories in $(NUCLEI_SDK_ROOT)/SoC/
SOC ?= demosoc
## Available choices:
## ilm: Program will be download into ilm/ram and run directly in ilm/ram, program lost when poweroff
## flash: Program will be download into flash, when running, program will be copied to ilm/ram and run in ilm/ram
## flashxip: Program will to be download into flash and run directly in Flash
DOWNLOAD ?= ilm
## If SIMULATION=1, it means the program is optimized for hardware simulation environment
SIMULATION ?= 0
## If V=1, it will display compiling message in verbose including compiling options
V ?=
## If SILENT=1, it will not display any compiling messsage
SILENT ?=

## FSBL Simu flag:
FSBL_SIMU_SKIP_HEADERCHECK ?= no

## FSBL PL Partition Load Mode:
## 0: regular,
## 1: in blocks, directly to PCAP WR STREAM
## 2: in blocks, firstly to buffer in ocm, then to PCAP WR STREAM
## 3: whole block, to buffer in ocm, then to PCAP WR STREAM
FSBL_SIMU_PL_TEST_MODE ?= 0


# Variables should be defined in Application Makefile
## Available choices:
## The name of sub directories in $(NUCLEI_SDK_ROOT)/OS/
RTOS ?=
## If PFLOAT=1, it will enable float point print when using nano newlib
PFLOAT ?= 0
## If NEWLIB=nano, it will use nano newlib, otherwise it will use normal newlib
NEWLIB ?= nano
## If NOGC=1, it will not gc any sections during compiling to save code size
NOGC ?=

FPGA_BIT_VERSION ?= STAGE_7


# Directories for SoC and RTOS chosen
NUCLEI_SDK_SOC = $(NUCLEI_SDK_ROOT)/SoC/$(SOC)
NUCLEI_SDK_RTOS = $(NUCLEI_SDK_ROOT)/OS/$(RTOS)

## Include GNU Make Standard Library
## Website: http://gmsl.sourceforge.net/
include $(NUCLEI_SDK_BUILD)/gmsl/gmsl

include $(NUCLEI_SDK_BUILD)/Makefile.misc

ifeq ($(SOC), demoapu)
TARGET:=$(TARGET)_apu
ifeq ($(OS),Windows_NT)
    COMPILE_PREFIX?=D:\tfcao\fpsoc\gcc\aarch64\bin\aarch64-none-elf-
else
    COMPILE_PREFIX ?= /opt/toolchain/gcc-arm-11.2-2022.02-x86_64-aarch64-none-elf/bin/aarch64-none-elf-
endif
include $(NUCLEI_SDK_BUILD)/Makefile.conf.apu
include $(NUCLEI_SDK_BUILD)/Makefile.rules.apu
else
TARGET:=$(TARGET)_rpu
ifeq ($(OS),Windows_NT)
    COMPILE_PREFIX ?= D:\tfcao\fpsoc\gcc\riscv\bin\riscv-nuclei-elf-
else
    COMPILE_PREFIX ?= /opt/toolchain/riscv-gcc/bin/riscv-nuclei-elf-
endif
ifeq ($(PINMUX_MODE), PINMUX_MODE1)
    ENABLE_PINMUX_MODE1 ?= 1
else ifeq ($(PINMUX_MODE), PINMUX_MODE2)
    ENABLE_PINMUX_MODE2 ?= 1
else ifeq ($(PINMUX_MODE), PINMUX_MODE3)
    ENABLE_PINMUX_MODE3 ?= 1
else
    ENABLE_PINMUX_MODE1 ?= 1
endif
ifeq ($(PINMUX_MODE_SD1), PINMUX_MODE_SD1)
    ENABLE_PINMUX_MODE_SD1 ?= 1
endif
include $(NUCLEI_SDK_BUILD)/Makefile.conf
include $(NUCLEI_SDK_BUILD)/Makefile.rules
endif

