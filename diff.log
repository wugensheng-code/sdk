diff --git a/Build/Makefile.base b/Build/Makefile.base
index 6afda66..b312afa 100644
--- a/Build/Makefile.base
+++ b/Build/Makefile.base
@@ -30,6 +30,17 @@ V ?=
 ## If SILENT=1, it will not display any compiling messsage
 SILENT ?=
 
+## FSBL Simu flag:
+FSBL_SIMU_SKIP_HEADERCHECK ?= no
+
+## FSBL PL Partition Load Mode:
+## 0: regular,
+## 1: in blocks, directly to PCAP WR STREAM
+## 2: in blocks, firstly to buffer in ocm, then to PCAP WR STREAM
+## 3: whole block, to buffer in ocm, then to PCAP WR STREAM
+FSBL_SIMU_PL_TEST_MODE ?= 0
+
+
 # Variables should be defined in Application Makefile
 ## Available choices:
 ## The name of sub directories in $(NUCLEI_SDK_ROOT)/OS/
diff --git a/Build/Makefile.conf b/Build/Makefile.conf
index 889fa56..4b25de5 100644
--- a/Build/Makefile.conf
+++ b/Build/Makefile.conf
@@ -112,6 +112,29 @@ else
 NEWLIB_LDFLAGS =
 endif
 
+ifeq ($(FSBL_SIMU_SKIP_HEADERCHECK), yes)
+COMMON_FLAGS += -DFSBL_SIMU_SKIP_HEADERCHECK
+endif
+
+ifeq ($(FSBL_SIMU_PL_TEST_MODE), 0)
+COMMON_FLAGS +=
+else
+ifeq ($(FSBL_SIMU_PL_TEST_MODE), 1)
+COMMON_FLAGS += -DFSBL_PL_SIMU_MODE_1
+else
+ifeq ($(FSBL_SIMU_PL_TEST_MODE), 2)
+COMMON_FLAGS += -DFSBL_PL_SIMU_MODE_2
+else
+ifeq ($(FSBL_SIMU_PL_TEST_MODE), 3)
+COMMON_FLAGS += -DFSBL_PL_SIMU_MODE_3
+endif
+endif
+endif
+endif
+
+
+
+
 ifeq ($(SIMU),xlspike)
 COMMON_FLAGS += -DSIMULATION_XLSPIKE
 endif
diff --git a/Build/Makefile.conf.apu b/Build/Makefile.conf.apu
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Board/anlogic_al9000_apu/Source/GCC/gcc_demoapu_ilm.ld b/SoC/demoapu/Board/anlogic_al9000_apu/Source/GCC/gcc_demoapu_ilm.ld
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Include/config.h b/SoC/demoapu/Common/Include/config.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Include/macro.h b/SoC/demoapu/Common/Include/macro.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Include/sysreg.h b/SoC/demoapu/Common/Include/sysreg.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Include/sysregs.h b/SoC/demoapu/Common/Include/sysregs.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Include/type.h b/SoC/demoapu/Common/Include/type.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/GCC/lowlevel.S b/SoC/demoapu/Common/Source/GCC/lowlevel.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/GCC/mem.S b/SoC/demoapu/Common/Source/GCC/mem.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/GCC/startup_aarch64.S b/SoC/demoapu/Common/Source/GCC/startup_aarch64.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/GCC/vectors.S b/SoC/demoapu/Common/Source/GCC/vectors.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Generic_timer/src/generic_timer.c b/SoC/demoapu/Common/Source/Generic_timer/src/generic_timer.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Gic_500/inc/gic_v3.h b/SoC/demoapu/Common/Source/Gic_500/inc/gic_v3.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Gic_500/inc/gic_v3_value.h b/SoC/demoapu/Common/Source/Gic_500/inc/gic_v3_value.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Gic_500/src/gic_v3.c b/SoC/demoapu/Common/Source/Gic_500/src/gic_v3.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/assert.c b/SoC/demoapu/Common/Source/Libc/assert.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/close.c b/SoC/demoapu/Common/Source/Libc/close.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/fstat.c b/SoC/demoapu/Common/Source/Libc/fstat.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/isatty.c b/SoC/demoapu/Common/Source/Libc/isatty.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/lseek.c b/SoC/demoapu/Common/Source/Libc/lseek.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/read.c b/SoC/demoapu/Common/Source/Libc/read.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/sbrk.c b/SoC/demoapu/Common/Source/Libc/sbrk.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/Libc/write.c b/SoC/demoapu/Common/Source/Libc/write.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/exception_64.c b/SoC/demoapu/Common/Source/exception_64.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/Common/Source/system_demoapu.c b/SoC/demoapu/Common/Source/system_demoapu.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/make.sh b/SoC/demoapu/make.sh
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/make_tzpc.sh b/SoC/demoapu/make_tzpc.sh
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/generic_timer/Makefile b/SoC/demoapu/test/generic_timer/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_cti_irq/Makefile b/SoC/demoapu/test/gic/gic_cti_irq/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_cti_irq/main.c b/SoC/demoapu/test/gic/gic_cti_irq/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_group0/main.c b/SoC/demoapu/test/gic/gic_group0/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_group1_nonsecure/main.c b/SoC/demoapu/test/gic/gic_group1_nonsecure/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_group1_secure/main.c b/SoC/demoapu/test/gic/gic_group1_secure/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ncnt_v_hp_irq/main.c b/SoC/demoapu/test/gic/gic_ncnt_v_hp_irq/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ncommirq/Makefile b/SoC/demoapu/test/gic/gic_ncommirq/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ncommirq/main.c b/SoC/demoapu/test/gic/gic_ncommirq/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nested/Makefile b/SoC/demoapu/test/gic/gic_nested/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nested/main.c b/SoC/demoapu/test/gic/gic_nested/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/Makefile b/SoC/demoapu/test/gic/gic_nexterrirq/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/arm_local_reg.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/arm_local_reg.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/barrier.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/barrier.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/base.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/base.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_hwdef.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_hwdef.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_prot.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_prot.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_types.h b/SoC/demoapu/test/gic/gic_nexterrirq/asm/pgtable_types.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/main.c b/SoC/demoapu/test/gic/gic_nexterrirq/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/mm.h b/SoC/demoapu/test/gic/gic_nexterrirq/mm.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/mmu.c b/SoC/demoapu/test/gic/gic_nexterrirq/mmu.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/ninterrupt.S b/SoC/demoapu/test/gic/gic_nexterrirq/ninterrupt.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_nexterrirq/page_alloc.c b/SoC/demoapu/test/gic/gic_nexterrirq/page_alloc.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/Makefile b/SoC/demoapu/test/gic/gic_ninterrupt/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/arm_local_reg.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/arm_local_reg.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/barrier.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/barrier.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/base.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/base.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_hwdef.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_hwdef.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_prot.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_prot.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_types.h b/SoC/demoapu/test/gic/gic_ninterrupt/asm/pgtable_types.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/linker.ld b/SoC/demoapu/test/gic/gic_ninterrupt/linker.ld
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/main.c b/SoC/demoapu/test/gic/gic_ninterrupt/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/mm.h b/SoC/demoapu/test/gic/gic_ninterrupt/mm.h
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/mmu.c b/SoC/demoapu/test/gic/gic_ninterrupt/mmu.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/ninterrupt.S b/SoC/demoapu/test/gic/gic_ninterrupt/ninterrupt.S
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_ninterrupt/page_alloc.c b/SoC/demoapu/test/gic/gic_ninterrupt/page_alloc.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_pmu_irq/Makefile b/SoC/demoapu/test/gic/gic_pmu_irq/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_pmu_irq/main.c b/SoC/demoapu/test/gic/gic_pmu_irq/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_priority/Makefile b/SoC/demoapu/test/gic/gic_priority/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_priority/main.c b/SoC/demoapu/test/gic/gic_priority/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_sgi/Makefile b/SoC/demoapu/test/gic/gic_sgi/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/gic/gic_sgi/main.c b/SoC/demoapu/test/gic/gic_sgi/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Makefile b/SoC/demoapu/test/tzpc/Makefile
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_dmc_cfg.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_dmc_cfg.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_dmc_cfg_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_dmc_cfg_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_apu.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_apu.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_apu_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_apu_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs0.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs0.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs0_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs0_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs1.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs1.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs1_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ddrs1_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm0.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm0.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm0_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm0_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm1.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm1.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm1_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_hpm1_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_npu.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_npu.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_npu_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_npu_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ocms2.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ocms2.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ocms2_clear.txt b/SoC/demoapu/test/tzpc/Script/NonSec/tzpc_conf_mpu_ocms2_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_dmc_cfg.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_dmc_cfg.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_dmc_cfg_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_dmc_cfg_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_apu.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_apu.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_apu_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_apu_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs0.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs0.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs0_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs0_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs1.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs1.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs1_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ddrs1_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm0.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm0.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm0_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm0_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm1.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm1.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm1_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_hpm1_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_npu.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_npu.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_npu_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_npu_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ocms2.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ocms2.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ocms2_clear.txt b/SoC/demoapu/test/tzpc/Script/Sec/tzpc_conf_mpu_ocms2_clear.txt
old mode 100755
new mode 100644
diff --git a/SoC/demoapu/test/tzpc/main.c b/SoC/demoapu/test/tzpc/main.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Include/al9000_aximon.h b/SoC/demosoc/Common/Include/al9000_aximon.h
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Include/al9000_ipc.h b/SoC/demosoc/Common/Include/al9000_ipc.h
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Include/mtimer.h b/SoC/demosoc/Common/Include/mtimer.h
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Include/smc_drv.h b/SoC/demosoc/Common/Include/smc_drv.h
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/AL_pinmux.c b/SoC/demosoc/Common/Source/Drivers/AL_pinmux.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/AL_uart.c b/SoC/demosoc/Common/Source/Drivers/AL_uart.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/al9000_aximon.c b/SoC/demosoc/Common/Source/Drivers/al9000_aximon.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/al9000_ipc.c b/SoC/demosoc/Common/Source/Drivers/al9000_ipc.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/mtimer.c b/SoC/demosoc/Common/Source/Drivers/mtimer.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/Drivers/nand_drv.c b/SoC/demosoc/Common/Source/Drivers/nand_drv.c
old mode 100755
new mode 100644
diff --git a/SoC/demosoc/Common/Source/GCC/startup_demosoc.S b/SoC/demosoc/Common/Source/GCC/startup_demosoc.S
index 57c69bf..1085b34 100644
--- a/SoC/demosoc/Common/Source/GCC/startup_demosoc.S
+++ b/SoC/demosoc/Common/Source/GCC/startup_demosoc.S
@@ -234,15 +234,19 @@ _start:
      */
     li t0, (1<<3) /*li t0, MMISC_CTL_NMI_CAUSE_FFF  old one*/
     csrs CSR_MMISC_CTL, t0
+
  #if defined FPGA_STAGE_7
-  //  li t0, (1<<3)
-  //  csrc CSR_MMISC_CTL, t0       //BPU: 1(default) enable, 0: disable ,csrc clear the enable bit 
-  //   li t0, (1<<12)
-  //  csrs CSR_MMISC_CTL, t0
+ #if defined RPU_FSBL_SIMU
+    li t0, (1<<3)
+    csrc CSR_MMISC_CTL, t0       //BPU: 1(default) enable, 0: disable ,csrc clear the enable bit
+    li t0, (1<<12)
+    csrs CSR_MMISC_CTL, t0
+ #endif
  #else
    li t0, MMISC_CTL_NMI_CAUSE_FFF
    csrs CSR_MMISC_CTL, t0
  #endif
+
     /*
      * Intialize ECLIC vector interrupt
      * base address mtvt to vector_base
diff --git a/application/Hard_test_case/AL_emmc.c b/application/Hard_test_case/AL_emmc.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/AL_emmc.h b/application/Hard_test_case/AL_emmc.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/AL_mmc.c b/application/Hard_test_case/AL_mmc.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/AL_mmc.h b/application/Hard_test_case/AL_mmc.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/AL_sd.c b/application/Hard_test_case/AL_sd.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/AL_sd.h b/application/Hard_test_case/AL_sd.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/00history.txt b/application/Hard_test_case/FATFS/00history.txt
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/00readme.txt b/application/Hard_test_case/FATFS/00readme.txt
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/diskio.c b/application/Hard_test_case/FATFS/diskio.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/diskio.h b/application/Hard_test_case/FATFS/diskio.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/ff.c b/application/Hard_test_case/FATFS/ff.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/ff.h b/application/Hard_test_case/FATFS/ff.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/ffconf.h b/application/Hard_test_case/FATFS/ffconf.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/integer.h b/application/Hard_test_case/FATFS/integer.h
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/FATFS/option/syscall.c b/application/Hard_test_case/FATFS/option/syscall.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/emmc_test.c b/application/Hard_test_case/emmc_test.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/main.c b/application/Hard_test_case/main.c
old mode 100755
new mode 100644
diff --git a/application/Hard_test_case/sdio_test.c b/application/Hard_test_case/sdio_test.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_USB/AL9000_usb_case2_case4/AL9000_usb/test.c b/application/baremetal/AL9000_USB/AL9000_usb_case2_case4/AL9000_usb/test.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_USB/AL9000_usb_case2_case4/AL9000_usb/usbh_def.h b/application/baremetal/AL9000_USB/AL9000_usb_case2_case4/AL9000_usb/usbh_def.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_USB/AL9000_usb_case5/AL9000_usb/test.c b/application/baremetal/AL9000_USB/AL9000_usb_case5/AL9000_usb/test.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_mpu/al_mpu.c b/application/baremetal/AL9000_mpu/al_mpu.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_mpu/al_mpu.h b/application/baremetal/AL9000_mpu/al_mpu.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_mpu/axidma.c b/application/baremetal/AL9000_mpu/axidma.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_mpu/main.c b/application/baremetal/AL9000_mpu/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_sd/Makefile b/application/baremetal/AL9000_sd/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_sd/sdio_test.c b/application/baremetal/AL9000_sd/sdio_test.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL9000_sd/sdio_test.h b/application/baremetal/AL9000_sd/sdio_test.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_ddr/Makefile b/application/baremetal/AL_demo_aximon/xmon_ddr/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_ddr/config.tcl b/application/baremetal/AL_demo_aximon/xmon_ddr/config.tcl
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_ddr/main.c b/application/baremetal/AL_demo_aximon/xmon_ddr/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_dmax/Makefile b/application/baremetal/AL_demo_aximon/xmon_dmax/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_dmax/main.c b/application/baremetal/AL_demo_aximon/xmon_dmax/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_drivers/drivers.c b/application/baremetal/AL_demo_aximon/xmon_drivers/drivers.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_global/Makefile b/application/baremetal/AL_demo_aximon/xmon_global/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_global/main.c b/application/baremetal/AL_demo_aximon/xmon_global/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_qos/Makefile b/application/baremetal/AL_demo_aximon/xmon_qos/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_qos/main.c b/application/baremetal/AL_demo_aximon/xmon_qos/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_qos_timeout/Makefile b/application/baremetal/AL_demo_aximon/xmon_qos_timeout/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_qos_timeout/main.c b/application/baremetal/AL_demo_aximon/xmon_qos_timeout/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_timeout/Makefile b/application/baremetal/AL_demo_aximon/xmon_timeout/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_aximon/xmon_timeout/main.c b/application/baremetal/AL_demo_aximon/xmon_timeout/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_can/can2.0B/main.c b/application/baremetal/AL_demo_can/can2.0B/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_can/can_loopback/Makefile b/application/baremetal/AL_demo_can/can_loopback/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_can/can_loopback/main.c b/application/baremetal/AL_demo_can/can_loopback/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_can/can_timeout_check/Makefile b/application/baremetal/AL_demo_can/can_timeout_check/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_can/can_timeout_check/main.c b/application/baremetal/AL_demo_can/can_timeout_check/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_dmac/AL_dmac_PER/AL_dmac_can/main.c b/application/baremetal/AL_demo_dmac/AL_dmac_PER/AL_dmac_can/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_ipc/ipc_apu/Makefile b/application/baremetal/AL_demo_ipc/ipc_apu/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_ipc/ipc_apu/main.c b/application/baremetal/AL_demo_ipc/ipc_apu/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_ipc/ipc_example/ipc_example.c b/application/baremetal/AL_demo_ipc/ipc_example/ipc_example.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_ipc/ipc_rpu/Makefile b/application/baremetal/AL_demo_ipc/ipc_rpu/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/AL_demo_ipc/ipc_rpu/main.c b/application/baremetal/AL_demo_ipc/ipc_rpu/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_dmac_axi/0_dmac_rw/main.c b/application/baremetal/demo_dmac_axi/0_dmac_rw/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_dmac_axi/3_dmac_boot/main.c b/application/baremetal/demo_dmac_axi/3_dmac_boot/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_dmac_axi/4_dmac_event/main.c b/application/baremetal/demo_dmac_axi/4_dmac_event/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_dmac_axi/5_dmac_m2m_arbi/main.c b/application/baremetal/demo_dmac_axi/5_dmac_m2m_arbi/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_dmac_axi/9_dmac_abort/main.c b/application/baremetal/demo_dmac_axi/9_dmac_abort/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_gpio/gpio_led/main.c b/application/baremetal/demo_gpio/gpio_led/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_qspi/qspi_flash_new/main.c b/application/baremetal/demo_qspi/qspi_flash_new/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_spi/spi_master/main.c b/application/baremetal/demo_spi/spi_master/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/demo_spi/spi_slave/main.c b/application/baremetal/demo_spi/spi_slave/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/AVC.c b/application/baremetal/rtp_lwip_xec/AVC.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/AVC.h b/application/baremetal/rtp_lwip_xec/AVC.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/Makefile b/application/baremetal/rtp_lwip_xec/Makefile
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/Network.c b/application/baremetal/rtp_lwip_xec/Network.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/Network.h b/application/baremetal/rtp_lwip_xec/Network.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/RTE_Components.h b/application/baremetal/rtp_lwip_xec/RTE_Components.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/RTPenc.c b/application/baremetal/rtp_lwip_xec/RTPenc.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/RTPenc.h b/application/baremetal/rtp_lwip_xec/RTPenc.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/RTPstream.c b/application/baremetal/rtp_lwip_xec/RTPstream.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/Utils.c b/application/baremetal/rtp_lwip_xec/Utils.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/Utils.h b/application/baremetal/rtp_lwip_xec/Utils.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/arch/cc.h b/application/baremetal/rtp_lwip_xec/arch/cc.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/arch/perf.h b/application/baremetal/rtp_lwip_xec/arch/perf.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/def.c b/application/baremetal/rtp_lwip_xec/def.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/dhcp.c b/application/baremetal/rtp_lwip_xec/dhcp.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/dns.c b/application/baremetal/rtp_lwip_xec/dns.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/etharp.c b/application/baremetal/rtp_lwip_xec/etharp.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/ethernet.c b/application/baremetal/rtp_lwip_xec/ethernet.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/icmp.c b/application/baremetal/rtp_lwip_xec/icmp.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/inet_chksum.c b/application/baremetal/rtp_lwip_xec/inet_chksum.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/init.c b/application/baremetal/rtp_lwip_xec/init.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/ip.c b/application/baremetal/rtp_lwip_xec/ip.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/ip4.c b/application/baremetal/rtp_lwip_xec/ip4.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/ip4_addr.c b/application/baremetal/rtp_lwip_xec/ip4_addr.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/ip4_frag.c b/application/baremetal/rtp_lwip_xec/ip4_frag.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/altcp.h b/application/baremetal/rtp_lwip_xec/lwip/altcp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/api.h b/application/baremetal/rtp_lwip_xec/lwip/api.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/arch.h b/application/baremetal/rtp_lwip_xec/lwip/arch.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/autoip.h b/application/baremetal/rtp_lwip_xec/lwip/autoip.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/debug.h b/application/baremetal/rtp_lwip_xec/lwip/debug.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/def.h b/application/baremetal/rtp_lwip_xec/lwip/def.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/dhcp.h b/application/baremetal/rtp_lwip_xec/lwip/dhcp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/dns.h b/application/baremetal/rtp_lwip_xec/lwip/dns.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/err.h b/application/baremetal/rtp_lwip_xec/lwip/err.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/errno.h b/application/baremetal/rtp_lwip_xec/lwip/errno.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/etharp.h b/application/baremetal/rtp_lwip_xec/lwip/etharp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/icmp.h b/application/baremetal/rtp_lwip_xec/lwip/icmp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/icmp6.h b/application/baremetal/rtp_lwip_xec/lwip/icmp6.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/igmp.h b/application/baremetal/rtp_lwip_xec/lwip/igmp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/inet_chksum.h b/application/baremetal/rtp_lwip_xec/lwip/inet_chksum.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/init.h b/application/baremetal/rtp_lwip_xec/lwip/init.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip.h b/application/baremetal/rtp_lwip_xec/lwip/ip.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip4.h b/application/baremetal/rtp_lwip_xec/lwip/ip4.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip4_addr.h b/application/baremetal/rtp_lwip_xec/lwip/ip4_addr.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip4_frag.h b/application/baremetal/rtp_lwip_xec/lwip/ip4_frag.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip6.h b/application/baremetal/rtp_lwip_xec/lwip/ip6.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip6_addr.h b/application/baremetal/rtp_lwip_xec/lwip/ip6_addr.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/ip_addr.h b/application/baremetal/rtp_lwip_xec/lwip/ip_addr.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/mem.h b/application/baremetal/rtp_lwip_xec/lwip/mem.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/memp.h b/application/baremetal/rtp_lwip_xec/lwip/memp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/mld6.h b/application/baremetal/rtp_lwip_xec/lwip/mld6.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/nd6.h b/application/baremetal/rtp_lwip_xec/lwip/nd6.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/netbuf.h b/application/baremetal/rtp_lwip_xec/lwip/netbuf.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/netdb.h b/application/baremetal/rtp_lwip_xec/lwip/netdb.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/netif.h b/application/baremetal/rtp_lwip_xec/lwip/netif.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/netifapi.h b/application/baremetal/rtp_lwip_xec/lwip/netifapi.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/opt.h b/application/baremetal/rtp_lwip_xec/lwip/opt.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/pbuf.h b/application/baremetal/rtp_lwip_xec/lwip/pbuf.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/api_msg.h b/application/baremetal/rtp_lwip_xec/lwip/priv/api_msg.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/mem_priv.h b/application/baremetal/rtp_lwip_xec/lwip/priv/mem_priv.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/memp_priv.h b/application/baremetal/rtp_lwip_xec/lwip/priv/memp_priv.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/memp_std.h b/application/baremetal/rtp_lwip_xec/lwip/priv/memp_std.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/raw_priv.h b/application/baremetal/rtp_lwip_xec/lwip/priv/raw_priv.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/tcp_priv.h b/application/baremetal/rtp_lwip_xec/lwip/priv/tcp_priv.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/priv/tcpip_priv.h b/application/baremetal/rtp_lwip_xec/lwip/priv/tcpip_priv.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/dhcp.h b/application/baremetal/rtp_lwip_xec/lwip/prot/dhcp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/etharp.h b/application/baremetal/rtp_lwip_xec/lwip/prot/etharp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/ethernet.h b/application/baremetal/rtp_lwip_xec/lwip/prot/ethernet.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/iana.h b/application/baremetal/rtp_lwip_xec/lwip/prot/iana.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/icmp.h b/application/baremetal/rtp_lwip_xec/lwip/prot/icmp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/ieee.h b/application/baremetal/rtp_lwip_xec/lwip/prot/ieee.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/ip.h b/application/baremetal/rtp_lwip_xec/lwip/prot/ip.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/ip4.h b/application/baremetal/rtp_lwip_xec/lwip/prot/ip4.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/ip6.h b/application/baremetal/rtp_lwip_xec/lwip/prot/ip6.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/prot/udp.h b/application/baremetal/rtp_lwip_xec/lwip/prot/udp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/raw.h b/application/baremetal/rtp_lwip_xec/lwip/raw.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/snmp.h b/application/baremetal/rtp_lwip_xec/lwip/snmp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/sockets.h b/application/baremetal/rtp_lwip_xec/lwip/sockets.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/stats.h b/application/baremetal/rtp_lwip_xec/lwip/stats.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/sys.h b/application/baremetal/rtp_lwip_xec/lwip/sys.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/tcp.h b/application/baremetal/rtp_lwip_xec/lwip/tcp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/timeouts.h b/application/baremetal/rtp_lwip_xec/lwip/timeouts.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwip/udp.h b/application/baremetal/rtp_lwip_xec/lwip/udp.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwipopts.h b/application/baremetal/rtp_lwip_xec/lwipopts.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/lwipopts_rte.h b/application/baremetal/rtp_lwip_xec/lwipopts_rte.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/main.c b/application/baremetal/rtp_lwip_xec/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/mem.c b/application/baremetal/rtp_lwip_xec/mem.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/memp.c b/application/baremetal/rtp_lwip_xec/memp.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/netif.c b/application/baremetal/rtp_lwip_xec/netif.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/netif/ethernet.h b/application/baremetal/rtp_lwip_xec/netif/ethernet.h
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/pbuf.c b/application/baremetal/rtp_lwip_xec/pbuf.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/raw.c b/application/baremetal/rtp_lwip_xec/raw.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/stats.c b/application/baremetal/rtp_lwip_xec/stats.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/sys.c b/application/baremetal/rtp_lwip_xec/sys.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/rtp_lwip_xec/udp.c b/application/baremetal/rtp_lwip_xec/udp.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/test_ddr/main.c b/application/baremetal/test_ddr/main.c
old mode 100755
new mode 100644
diff --git a/application/baremetal/test_ddr_ocm/main.c b/application/baremetal/test_ddr_ocm/main.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/Makefile b/application/fsbl/Makefile
old mode 100755
new mode 100644
index 2fdbcb2..27b56f6
--- a/application/fsbl/Makefile
+++ b/application/fsbl/Makefile
@@ -17,6 +17,8 @@ INCDIRS = . ./driver/qspi/ driver/sd_emmc/ driver/sd_emmc/FATFS/
 
 COMMON_FLAGS := -O2 -fno-builtin-printf -fno-builtin-sprintf -fno-builtin-snprintf	#-msave-restore -msmall-data-limit=8
 
+COMMON_FLAGS += -DRPU_FSBL_SIMU
+
 #LDFLAGS += -Xlinker --gc-sections
 
 PROGRAM=./
diff --git a/application/fsbl/al_types.h b/application/fsbl/al_types.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_boot.c b/application/fsbl/alfsbl_boot.c
old mode 100755
new mode 100644
index 346438f..55cabde
--- a/application/fsbl/alfsbl_boot.c
+++ b/application/fsbl/alfsbl_boot.c
@@ -20,6 +20,7 @@ uint32_t AlFsbl_PrimaryBootDeviceInit(AlFsblInfo *FsblInstancePtr)
 {
 	uint32_t Status = ALFSBL_SUCCESS;
 	uint32_t BootMode;
+	uint32_t BlockSizeMax;
 
 	BootMode = REG32(SYSCTRL_NS_BOOT_MODE);
 
@@ -33,7 +34,7 @@ uint32_t AlFsbl_PrimaryBootDeviceInit(AlFsblInfo *FsblInstancePtr)
 			goto END;
 		}
 	}
-	
+
 	switch(BootMode) {
 	case ALFSBL_BOOTMODE_JTAG:
 		Status = ALFSBL_STATUS_JTAG;
@@ -75,7 +76,7 @@ uint32_t AlFsbl_PrimaryBootDeviceInit(AlFsblInfo *FsblInstancePtr)
 		break;
 
 	default:
-		printf("unsupported boot mode\r\n");
+		printf("Unsupported boot mode\r\n");
 		Status = ALFSBL_ERROR_UNSUPPORTED_BOOT_MODE;
 	}
 
@@ -83,13 +84,15 @@ uint32_t AlFsbl_PrimaryBootDeviceInit(AlFsblInfo *FsblInstancePtr)
 		goto END;
 	}
 
-	Status = FsblInstancePtr->DeviceOps.DeviceInit();
+	Status = FsblInstancePtr->DeviceOps.DeviceInit(&BlockSizeMax);
 	if(ALFSBL_SUCCESS != Status) {
 		printf("Device init failed: %x\r\n", Status);
 		Status = ALFSBL_ERROR_DEVICE_INIT_FAILED;
 		goto END;
 	}
 
+	FsblInstancePtr->DeviceOps.BlockSizeMax = BlockSizeMax;
+
 END:
 	return Status;
 }
diff --git a/application/fsbl/alfsbl_boot.h b/application/fsbl/alfsbl_boot.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_data.h b/application/fsbl/alfsbl_data.h
old mode 100755
new mode 100644
index 006ff3a..fd8d05f
--- a/application/fsbl/alfsbl_data.h
+++ b/application/fsbl/alfsbl_data.h
@@ -16,7 +16,7 @@ extern "C" {
 
 #include "demosoc.h"
 #include "alfsbl_defines.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
 
 #if defined (CPU_RPU_64)
 #define PTRSIZE uint64_t
@@ -83,7 +83,7 @@ extern "C" {
 #define ALIH_PH_ATTRIB_AUTH_TYPE_MASK      (0x03 << 14)
 #define ALIH_PH_ATTRIB_AUTH_TYPE_NONE      (0x00 << 14)
 #define ALIH_PH_ATTRIB_AUTH_TYPE_SM2       (0x01 << 14)
-#define ALIH_PH_ATTRIB_AUTH_TYPE_ECC256  (0x02 << 14)
+#define ALIH_PH_ATTRIB_AUTH_TYPE_ECC256    (0x02 << 14)
 #define ALIH_PH_ATTRIB_AUTH_TYPE_MAXVAL    (0x02 << 14)
 
 #define ALIH_PH_ATTRIB_ENC_TYPE_MASK       (0x03 << 12)
@@ -141,24 +141,10 @@ typedef struct _AlFsbl_BootHeaderFull_ {
 	uint8_t  EncKey[32];           // 0xa0~0xbc,   encryption key
 	uint8_t  SecHdrIv[32];         // 0xc0~0xdc,   secure header iv
 	uint8_t  Reserved_E0[32];      // 0xe0~0xfc,   reserved
-	uint32_t RegInitVal[128];       // 0x100~0x2fc, register intialization data
+	uint32_t RegInitVal[128];      // 0x100~0x2fc, register intialization data
 } AlFsbl_BootHeaderFull;
 
 
-typedef struct _AlFsbl_BootHeader_ {
-	uint32_t QspiWidthSel;
-	uint32_t ImageId;
-	uint32_t EncStatus;
-	uint32_t BhAttr;
-	uint32_t BhAcOffset;
-	uint32_t BhChecksum;
-	uint32_t FirstPartiHdrOffset;
-	uint32_t PartitionNum;
-	uint8_t  EncKey[32];
-	uint8_t  SecHdrIv[32];
-} AlFsbl_BootHeader;
-
-
 typedef struct _AlFsbl_PartitionHeader_ {
 	uint32_t PartitionLen;              /// 0x00 Partition Byte Length, including padding
 	uint32_t ExtractedPartitionLen;     /// 0x04 Partition Byte Length, not including padding
@@ -177,19 +163,6 @@ typedef struct _AlFsbl_PartitionHeader_ {
 } AlFsbl_PartitionHeader;
 
 
-//typedef struct {
-//	uint32_t Version;                /**< 0x00 bootgen version used  */
-//	uint32_t NoOfPartitions;         /**< 0x04 No of partition present  */
-//	uint32_t PartitionHeaderAddress; /**< 0x08 Address to start of partition header*/
-//	uint32_t Reserved_0xC;           /**< 0x0C Reserved */
-//	uint32_t AuthCertificateOffset;  /**  0x10 Authentication certificate address */
-//	uint32_t PartitionPresentDevice; /**< 0x14 Reserved for AL9000 */
-//	uint32_t Reserved[9];            /**< ~ 0x38 Reserved */
-//	uint32_t Checksum;               /**< 0x3C Checksum of the image header table */
-//} AlFsbl_ImageHeaderTable;
-
-
-
 typedef struct _AlFsbl_ImageHeader_ {
 	AlFsbl_BootHeaderFull   BootHeader;
 	AlFsbl_PartitionHeader  PartitionHeader[ALIH_MAX_PARTITIONS];
@@ -204,20 +177,21 @@ typedef struct _AlFsbl_HandoffValues_ {
 
 typedef struct _AlFsbl_DeviceOps_ {
 	uint32_t DeviceBaseAddress;
-	uint32_t (*DeviceInit)(void);
-	uint32_t (*DeviceCopy)(uint64_t SrcAddress, PTRSIZE DestAddress, uint32_t Length, SecureInfo *pSecureInfo);
+	uint32_t BlockSizeMax;
+	uint32_t (*DeviceInit)(uint32_t *pBlockSizeMax);
+	uint32_t (*DeviceCopy)(PTRSIZE SrcAddress, PTRSIZE DestAddress, uint32_t Length, SecureInfo *pSecureInfo);
 	uint32_t (*DeviceRelease)(void);
 } AlFsbl_DeviceOps;
 
 
 typedef struct _AlFsblInfo_ {
-	uint32_t    Version;
-	uint32_t    ProcessorID;
-	PTRSIZE     ImageOffsetAddress;
-	uint32_t    ErrorCode;
-	uint32_t    PrimaryBootDevice;
-	uint32_t    HandoffCpuNum;
-	uint32_t    ResetReason;
+	uint32_t             Version;
+	uint32_t             ProcessorID;
+	PTRSIZE              ImageOffsetAddress;
+	uint32_t             ErrorCode;
+	uint32_t             PrimaryBootDevice;
+	uint32_t             HandoffCpuNum;
+	uint32_t             ResetReason;
 	AlFsbl_DeviceOps     DeviceOps;
 	AlFsbl_ImageHeader   ImageHeader;  /// todo, need to definition
 	AlFsbl_HandoffValues HandoffValues[3];
diff --git a/application/fsbl/alfsbl_defines.h b/application/fsbl/alfsbl_defines.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_efuse.c b/application/fsbl/alfsbl_efuse.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_efuse.h b/application/fsbl/alfsbl_efuse.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_emmc_raw.c b/application/fsbl/alfsbl_emmc_raw.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_emmc_raw.h b/application/fsbl/alfsbl_emmc_raw.h
old mode 100755
new mode 100644
index 587aaa2..454d2a3
--- a/application/fsbl/alfsbl_emmc_raw.h
+++ b/application/fsbl/alfsbl_emmc_raw.h
@@ -15,6 +15,8 @@ extern "C" {
 #include <stdint.h>
 #include "alfsbl_data.h"
 #include "alfsbl_hw.h"
+#include "al9000_secure.h"
+
 
 typedef enum{
     EMMC_FREQ_400K,
diff --git a/application/fsbl/alfsbl_err_code.h b/application/fsbl/alfsbl_err_code.h
old mode 100755
new mode 100644
index 55b12b7..15d2801
--- a/application/fsbl/alfsbl_err_code.h
+++ b/application/fsbl/alfsbl_err_code.h
@@ -14,20 +14,17 @@ extern "C" {
 #endif
 
 
-/// error code format (16 bits): XXYY
+/// error code format (32 bits): AABBCCCC
 ///
-/// YY: error code irrespective of stage
+/// CCCC: error code irrespective of stage
 ///
-/// XX -> x1 x2 x3 x4 x5 x6 x7 x8
-///
-/// x1: FSBL / CSUROM error
-///
-/// x2x3: stage which error happened at
+/// AA: stage which error happened at
 ///       00 -> error at stage 1
 ///       01 -> error at stage 2
 ///       02 -> error at stage 3
-///       04 -> error at stage 4
-/// x4x5x6x7x8: reserved for now
+///       03 -> error at stage 4
+///
+/// BB: reserved for now
 
 
 #define ALFSBL_SUCCESS		                   (0x0)
@@ -38,6 +35,10 @@ extern "C" {
 #define ALFSBL_ERROR_UNSUPPORTED_BOOT_MODE   (0x06U)
 #define ALFSBL_ERROR_DEVICE_INIT_FAILED      (0x07U)
 
+/// error code 0x10~0x16 is each kind of cfg state error status
+#define ALFSBL_ERROR_PL_CFG_STATE_ERROR      (0x17U)
+#define ALFSBL_ERROR_PL_INIT_TIMEOUT         (0x18U)
+
 #define ALFSBL_ERROR_CHECKSUM_ERROR          (0x60U)
 #define ALFSBL_ERROR_IMAGE_HEADER_ACOFFSET   (0x64U)
 #define ALFSBL_ERROR_SEC_PARAM_INVALID       (0x65U)
@@ -61,12 +62,12 @@ extern "C" {
 #define ALFSBL_ERROR_AUTH_FAIL               (0x68U)
 #define ALFSBL_NO_VALID_PPK                  (0x69U)
 
-#define ALFSBL_ERROR_PL_INIT_TIMEOUT         (0x07U)
 
-#define ALFSBL_ERROR_STAGE_1          (uint32_t)(0x0000)
-#define ALFSBL_ERROR_STAGE_2          (uint32_t)(0x2000)
-#define ALFSBL_ERROR_STAGE_3          (uint32_t)(0x4000)
-#define ALFSBL_ERROR_STAGE_4          (uint32_t)(0x6000)
+
+#define ALFSBL_ERROR_STAGE_1          (uint32_t)(0x01000000UL)
+#define ALFSBL_ERROR_STAGE_2          (uint32_t)(0x02000000UL)
+#define ALFSBL_ERROR_STAGE_3          (uint32_t)(0x03000000UL)
+#define ALFSBL_ERROR_STAGE_4          (uint32_t)(0x04000000UL)
 
 #define ALFSBL_ERR_SYS_WDT_RESET      (0x9U)
 
diff --git a/application/fsbl/alfsbl_err_lockdown.c b/application/fsbl/alfsbl_err_lockdown.c
old mode 100755
new mode 100644
index 5b05f53..b9a23dc
--- a/application/fsbl/alfsbl_err_lockdown.c
+++ b/application/fsbl/alfsbl_err_lockdown.c
@@ -8,17 +8,45 @@
 #include "demosoc.h"
 #include "alfsbl_hw.h"
 #include "alfsbl_err_lockdown.h"
+#include "alfsbl_boot.h"
 
-void AlFsbl_ErrorLockDown(uint32_t ErrorStatus)
+/**
+ * 1, update the error status register and fsbl instance structure with fsbl error code
+ * 2, get boot mode and check wheather support multi-boot or not
+ * 3.1 support multi-boot:
+ *     stop wdt, hook before fallback(user code), update multiboot register, make sure everything completes, trigger a system reset
+ * 3.2 not support multi-boot:
+ *     jump to a wfe/wfi loop
+ **/
+
+void AlFsbl_ErrorLockDown(AlFsblInfo *FsblInstancePtr, uint32_t ErrorStatus)
 {
-	/**
-	 * 1, update the error status register and fsbl instance structure with fsbl error code
-	 * 2, get boot mode and check wheather support multi-boot or not
-	 * 3.1 support multi-boot:
-	 *     stop wdt, hook before fallback(user code), update multiboot register, make sure everything completes, trigger a system reset
-	 * 3.2 not support multi-boot:
-	 *     jump to a wfe/wfi loop
-	 **/
+
+	uint32_t BootMode;
+	BootMode = FsblInstancePtr->PrimaryBootDevice;
+	uint32_t LoopAddr = 0x6101fffc;
+
+	/// update error status register
 	REG32(SYSCTRL_S_FSBL_ERR_CODE) = ErrorStatus;
+
+	if(BootMode == ALFSBL_BOOTMODE_JTAG) {
+		/// JTAG BOOT MODE not support multi-boot, jump to a infinite loop
+		REG32(LoopAddr) = 0xa001a001;
+		__asm__ __volatile__(
+		"jr %[src]"
+		:
+		:[src]"r"(LoopAddr)
+		);
+	}
+	else {
+		/// Multi-boot: update MULTBOOT register
+		REG32(SYSCTRL_S_MULTI_BOOT) = REG32(SYSCTRL_S_MULTI_BOOT) + 1;
+		/// trigger a system reset
+		REG32(SYSCTRL_S_GLOBAL_SRSTN) = REG32(SYSCTRL_S_GLOBAL_SRSTN) & (~(1 << 9));
+		REG32(SYSCTRL_S_GLOBAL_SRSTN) = REG32(SYSCTRL_S_GLOBAL_SRSTN) & (~1);
+	}
+
+
+
 	return;
 }
diff --git a/application/fsbl/alfsbl_err_lockdown.h b/application/fsbl/alfsbl_err_lockdown.h
old mode 100755
new mode 100644
index 14c4479..c903d9e
--- a/application/fsbl/alfsbl_err_lockdown.h
+++ b/application/fsbl/alfsbl_err_lockdown.h
@@ -14,7 +14,9 @@ extern "C" {
 
 #include <stdint.h>
 
-void AlFsbl_ErrorLockDown(uint32_t ErrorStatus);
+#include "alfsbl_data.h"
+
+void AlFsbl_ErrorLockDown(AlFsblInfo *FsblInstancePtr, uint32_t ErrorStatus);
 
 #ifdef __cplusplus
 }
diff --git a/application/fsbl/alfsbl_handoff.c b/application/fsbl/alfsbl_handoff.c
old mode 100755
new mode 100644
index c64a0df..0e0a5f4
--- a/application/fsbl/alfsbl_handoff.c
+++ b/application/fsbl/alfsbl_handoff.c
@@ -60,7 +60,7 @@ uint32_t AlFsbl_Handoff(const AlFsblInfo *FsblInstancePtr)
 
 	RunningCpu = FsblInstancePtr->ProcessorID;
 
-	printf("Mark FSBL is completed...");
+	printf("Mark FSBL is completed...\r\n");
 	REG32(SYSCTRL_S_FSBL_ERR_CODE) = ALFSBL_COMPLETED;
 
 	/// remove isolation of ps-pl cross interface
@@ -69,11 +69,17 @@ uint32_t AlFsbl_Handoff(const AlFsblInfo *FsblInstancePtr)
 	/// disable pcap to restore pcap-pl isolation
 	REG32(CSU_PCAP_ENABLE) = 0;
 
+	if(FsblInstancePtr->PrimaryBootDevice == ALFSBL_BOOTMODE_JTAG) {
+		printf("jump to a infinite loop\r\n");
+		REG32(0x60000000) = 0xa001a001;
+		AlFsbl_HandoffExit(0x60000000);
+	}
+
 	for(HandoffIdx = 0; HandoffIdx < FsblInstancePtr->HandoffCpuNum; HandoffIdx++) {
 		CpuSettings = FsblInstancePtr->HandoffValues[HandoffIdx].CpuSettings;
 		HandoffAddress = FsblInstancePtr->HandoffValues[HandoffIdx].HandoffAddress;
-		printf("handoff cpu : %08x\n", FsblInstancePtr->HandoffValues[HandoffIdx].CpuSettings);
-		printf("handoff addr: %08x\n", FsblInstancePtr->HandoffValues[HandoffIdx].HandoffAddress);
+		printf("handoff cpu : %08x\r\n", FsblInstancePtr->HandoffValues[HandoffIdx].CpuSettings);
+		printf("handoff addr: %08x\r\n", FsblInstancePtr->HandoffValues[HandoffIdx].HandoffAddress);
 
 		if(RunningCpu != CpuSettings) {
 			/// handoff to a different cpu
diff --git a/application/fsbl/alfsbl_handoff.h b/application/fsbl/alfsbl_handoff.h
old mode 100755
new mode 100644
index 1bf5a3c..88f42b9
--- a/application/fsbl/alfsbl_handoff.h
+++ b/application/fsbl/alfsbl_handoff.h
@@ -15,6 +15,7 @@ extern "C" {
 #include <stdint.h>
 #include "alfsbl_err_code.h"
 #include "alfsbl_data.h"
+#include "alfsbl_boot.h"
 
 void AlFsbl_HandoffExit(uint64_t HandoffAddress);
 
diff --git a/application/fsbl/alfsbl_hw.h b/application/fsbl/alfsbl_hw.h
old mode 100755
new mode 100644
index b77286d..cd355bb
--- a/application/fsbl/alfsbl_hw.h
+++ b/application/fsbl/alfsbl_hw.h
@@ -13,9 +13,9 @@ extern "C" {
 #endif
 
 /// simulation platform
-//#define SIMU_AL9000_DV
+#define SIMU_AL9000_DV
 
-#define IMAGE_FLASH_OFFSET 0x00000000
+#define IMAGE_FLASH_OFFSET (0x00000000)
 
 #define QSPI_XIP_BASEADDR  (0x70000000)
 
diff --git a/application/fsbl/alfsbl_image_header.c b/application/fsbl/alfsbl_image_header.c
old mode 100755
new mode 100644
index 6a5ee5e..36ae0f4
--- a/application/fsbl/alfsbl_image_header.c
+++ b/application/fsbl/alfsbl_image_header.c
@@ -6,12 +6,10 @@
  */
 #include <stdio.h>
 #include "alfsbl_image_header.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
+#include "demosoc.h"
 
-//extern uint8_t  ReadBuffer[READ_BUFFER_SIZE];
 extern uint8_t  AuthBuffer[ALFSBL_AUTH_BUFFER_SIZE];
-//extern uint32_t Iv[ALIH_BH_IV_LENGTH / 4U];
-//extern SecureInfo FsblSecInfo;
 
 
 uint32_t AlFsbl_BootDevInitAndHdrValidate(AlFsblInfo *FsblInstancePtr)
@@ -114,7 +112,7 @@ uint32_t AlFsbl_ValidateImageHeader(AlFsblInfo *FsblInstancePtr)
 		printf("image header authentication passed...\r\n");
 	}
 	else {
-		printf("image header authentication not enabled....\n");
+		printf("image header authentication not enabled....\r\n");
 	}
 #endif
 
@@ -187,8 +185,8 @@ uint32_t AlFsbl_ImgHdrAuth(AlFsblInfo *FsblInstancePtr, uint32_t EfuseCtrl)
 	ImageOffsetAddress = FsblInstancePtr->ImageOffsetAddress;
 	BootHdrAttrb = FsblInstancePtr->ImageHeader.BootHeader.BhAttr;
 
-	printf("Efuse Ctrl:   %08x\n", EfuseCtrl);
-	printf("BootHdrAttrb: %08x\n", BootHdrAttrb);
+	printf("Efuse Ctrl:   %08x\r\n", EfuseCtrl);
+	printf("BootHdrAttrb: %08x\r\n", BootHdrAttrb);
 
 	/// get image header authentication type
 	if((EfuseCtrl & EFUSE_AUTH_TYPE_MASK) == EFUSE_AUTH_TYPE_SM2) {
@@ -373,14 +371,4 @@ END:
 
 
 
-
-
-
-
-
-
-
-
-
-
 
diff --git a/application/fsbl/alfsbl_image_header.h b/application/fsbl/alfsbl_image_header.h
old mode 100755
new mode 100644
index cc8d16b..a5d97cb
--- a/application/fsbl/alfsbl_image_header.h
+++ b/application/fsbl/alfsbl_image_header.h
@@ -18,19 +18,18 @@ extern "C" {
 #include "alfsbl_boot.h"
 #include "alfsbl_misc.h"
 #include "alfsbl_hw.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
 
 
 uint32_t AlFsbl_BootDevInitAndHdrValidate(AlFsblInfo *FsblInstancePtr);
-//uint32_t AlFsbl_ValidateHeader(AlFsblInfo *FsblInstancePtr);
 uint32_t AlFsbl_ValidateImageHeader(AlFsblInfo *FsblInstancePtr);
-//uint32_t AlFsbl_ReadPartitionHeader(AlFsblInfo *AlFsblInstancePtr, uint32_t ImageAddr);
 
 uint32_t AlFsbl_ImgHdrAuth(AlFsblInfo *FsblInstancePtr, uint32_t EfuseCtrl);
 uint32_t AlFsbl_PpkVerification(AlFsblInfo *FsblInstancePtr, uint32_t BootHdrAttrb, uint32_t EfuseCtrl);
-//uint32_t AlFsbl_SpkVerification(AlFsblInfo *FsblInstancePtr, uint32_t BootHdrAttrb, uint32_t EfuseCtrl);
 uint32_t AlFsbl_SpkVerification(AlFsblInfo *FsblInstancePtr, SecureInfo *pFsblIHSecInfo);
 
+
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/application/fsbl/alfsbl_init.c b/application/fsbl/alfsbl_init.c
old mode 100755
new mode 100644
index 537cdfa..892e31e
--- a/application/fsbl/alfsbl_init.c
+++ b/application/fsbl/alfsbl_init.c
@@ -5,10 +5,13 @@
  *      Author: qsxu
  */
 
+#include <stdio.h>
+
+#include "demosoc.h"
+
 #include "alfsbl_hw.h"
 #include "alfsbl_init.h"
-#include "demosoc.h"
-#include <stdio.h>
+#include "psu_init.h"
 
 #if __riscv
 #include "core_feature_eclic.h"
@@ -37,6 +40,7 @@ uint32_t AlFsbl_Initialize(AlFsblInfo *FsblInstancePtr)
 	}
 
 	/// clear pending interrupt
+	printf("Clear all pending interrupts of rpu...\r\n");
 	AlFsbl_ClearPendingInterrupt();
 
 	/// processor init
@@ -46,6 +50,12 @@ uint32_t AlFsbl_Initialize(AlFsblInfo *FsblInstancePtr)
 		goto END;
 	}
 
+	/// psu init
+	Status = psu_init();
+	if(Status != ALFSBL_SUCCESS) {
+		goto END;
+	}
+
 	/// tcm ecc init if required
 	Status = AlFsbl_TcmInit(FsblInstancePtr);
 	if(Status != ALFSBL_SUCCESS) {
@@ -78,9 +88,11 @@ static uint32_t AlFsbl_GetResetReason(void)
 	uint32_t Ret;
 
 	if((REG32(SYSCTRL_S_GLOBAL_SRSTN)) & SYSCTRL_S_GLOBAL_SRSTN_MSK_PSONLY) {
+		printf("PS only reset\r\n");
 		Ret = FSBL_PS_ONLY_RESET;
 	}
 	else {
+		printf("System reset\r\n");
 		Ret = FSBL_SYSTEM_RESET;
 	}
 
diff --git a/application/fsbl/alfsbl_init.h b/application/fsbl/alfsbl_init.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_main.c b/application/fsbl/alfsbl_main.c
old mode 100755
new mode 100644
index e282b3d..e02e1c2
--- a/application/fsbl/alfsbl_main.c
+++ b/application/fsbl/alfsbl_main.c
@@ -12,16 +12,16 @@
 #include "alfsbl_partition_load.h"
 #include "alfsbl_handoff.h"
 #include "alfsbl_err_lockdown.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
 #include "alfsbl_misc.h"
+#include "alfsbl_hw.h"
 
 #include "demosoc.h"
-#include "driver/qspi/qspi_drv.h"
-#include "driver/qspi/qspi_flash_drv.h"
+#include "qspi_drv.h"
+#include "qspi_flash_drv.h"
 
 #include "alfsbl_qspi.h"
 
-#include "enc_test.h"
 
 
 /********************* global variables *********************/
@@ -35,11 +35,13 @@ SecureInfo FsblSecInfo = {0};
 #define SIMU_FAIL (0x0bad0bad)
 void simu_report(uint32_t status)
 {
-	/*__asm__ __volatile__(
+#if defined SIMU_AL9000_DV
+	__asm__ __volatile__(
 	"csrw mscratch, %[src]"
 	:
 	:[src]"r"(status)
-	);*/
+	);
+#endif
 	return;
 }
 
@@ -58,7 +60,6 @@ int main(void)
 	REG32(SYSCTRL_NS_PLS_PROT) = REG32(SYSCTRL_NS_PLS_PROT) & (~0x2);
 #endif
 
-
 	while (FsblStage <= ALFSBL_STAGE_DFT) {
 		switch (FsblStage) {
 		case ALFSBL_STAGE1:
@@ -155,7 +156,7 @@ int main(void)
 		case ALFSBL_STAGE_ERR:
 			printf("=================== In Stage Err ===================\r\n");
 			printf("fsbl error: %x\r\n", FsblStatus);
-			AlFsbl_ErrorLockDown(FsblStatus);
+			AlFsbl_ErrorLockDown(&FsblInstance, FsblStatus);
 
 			/// we should never be here
 			FsblStage = ALFSBL_STAGE_DFT;
@@ -164,7 +165,7 @@ int main(void)
 		case ALFSBL_STAGE_DFT:
 		default:
 			printf("================= In Stage Default =================\r\n");
-			printf("In default stage: we should never be here");
+			printf("In default stage: we should never be here\r\n");
 			break;
 		}
 
diff --git a/application/fsbl/alfsbl_main.h b/application/fsbl/alfsbl_main.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_misc.c b/application/fsbl/alfsbl_misc.c
old mode 100755
new mode 100644
index 33b5910..1f725da
--- a/application/fsbl/alfsbl_misc.c
+++ b/application/fsbl/alfsbl_misc.c
@@ -8,6 +8,7 @@
 #include "demosoc.h"
 #include "alfsbl_misc.h"
 
+
 void *AlFsbl_MemCpy(void *DestPtr, const void *SrcPtr, uint32_t Len)
 {
 	uint32_t *Dst = DestPtr;
diff --git a/application/fsbl/alfsbl_misc.h b/application/fsbl/alfsbl_misc.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_nand.c b/application/fsbl/alfsbl_nand.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_nand.h b/application/fsbl/alfsbl_nand.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_partition_load.c b/application/fsbl/alfsbl_partition_load.c
old mode 100755
new mode 100644
index 1ec6be4..642cc48
--- a/application/fsbl/alfsbl_partition_load.c
+++ b/application/fsbl/alfsbl_partition_load.c
@@ -7,7 +7,8 @@
 #include <stdio.h>
 #include <stdint.h>
 #include "alfsbl_misc.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
+
 #include "alfsbl_err_code.h"
 #include "alfsbl_hw.h"
 #include "alfsbl_data.h"
@@ -19,9 +20,18 @@ extern uint8_t  ReadBuffer[READ_BUFFER_SIZE];
 
 
 static uint32_t AlFsbl_PartitionHeaderValidation(AlFsblInfo *FsblInstancePtr, uint32_t PartitionIdx, SecureInfo *pSecureInfo);
+
 static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *pSecureInfo, uint32_t PartitionIdx);
-static uint32_t AlFsbl_LoadPlPartition(AlFsblInfo *FsblInstancePtr, uint32_t PartitionIdx) __attribute__((noinline));
+
+static uint32_t AlFsbl_LoadPlPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *pSecureInfo, uint32_t PartitionIdx);
+
+static uint32_t AlFsbl_BitstreamDataTransfer(AlFsblInfo *FsblInstancePtr, SecureInfo *pSecureInfo,
+		                                     uint32_t PartitionIdx, uint32_t BufferAddr, uint32_t BlockSizeMax);
+
+
 static uint32_t AlFsbl_CheckPlInitDone(void);
+static uint32_t ALFsbl_BitStreamProgDone(void);
+
 static void     AlFsbl_PrintPartitionHeaderInfo(AlFsbl_PartitionHeader *PtHdr);
 
 extern SecureInfo FsblSecInfo;
@@ -60,12 +70,12 @@ uint32_t AlFsbl_PartitionLoad(AlFsblInfo *FsblInstancePtr, uint32_t PartitionIdx
 	}
 	else if(DestDev == ALIH_PH_ATTRIB_DEST_DEV_PL) {
 		if(FsblInstancePtr->ResetReason == FSBL_PS_ONLY_RESET) {
-			printf("ps only reset, no need to load pl partition");
+			printf("ps only reset, no need to load pl partition\r\n");
 			Status = ALFSBL_SUCCESS;
 			goto END;
 		}
 		printf("loading pl partition...\r\n");
-		Status = AlFsbl_LoadPlPartition(FsblInstancePtr, PartitionIdx);
+		Status = AlFsbl_LoadPlPartition(FsblInstancePtr, &FsblSecInfo, PartitionIdx);
 	}
 	else {
 		/**do nothing**/
@@ -142,12 +152,12 @@ static uint32_t AlFsbl_PartitionHeaderValidation(AlFsblInfo *FsblInstancePtr, ui
 	else if((PtAttrAuthType == ALIH_PH_ATTRIB_AUTH_TYPE_ECC256) && ((EfuseCtrl & EFUSE_AUTH_TYPE_MASK) == EFUSE_AUTH_TYPE_ECC256)) {
 		pSecureInfo->AuthType = OP_AUTH_ECC256;
 		pSecureInfo->HashType = OP_HASH_SHA256;
-		printf("Authentication SM2\r\n");
+		printf("Authentication ECC256\r\n");
 	}
 	else if((PtAttrAuthType == ALIH_PH_ATTRIB_AUTH_TYPE_SM2) && ((EfuseCtrl & EFUSE_AUTH_TYPE_MASK) == EFUSE_AUTH_TYPE_SM2)) {
 		pSecureInfo->AuthType = OP_AUTH_SM2;
 		pSecureInfo->HashType = OP_HASH_SM3;
-		printf("Authentication ECC256\r\n");
+		printf("Authentication SM2\r\n");
 	}
 	else {
 		printf("Auth type not match efuse set...\r\n");
@@ -165,11 +175,11 @@ static uint32_t AlFsbl_PartitionHeaderValidation(AlFsblInfo *FsblInstancePtr, ui
 	}
 	else if((PtAttrEncType == ALIH_PH_ATTRIB_ENC_TYPE_AES256) && ((EfuseCtrl & EFUSE_ENC_TYPE_MASK) == EFUSE_ENC_TYPE_AES256)) {
 		pSecureInfo->EncType = OP_ENCRYPT_AES256;
-		printf("Encrypte AES256.\r\n");
+		printf("Encrypt AES256.\r\n");
 	}
 	else if((PtAttrEncType == ALIH_PH_ATTRIB_ENC_TYPE_SM4) && ((EfuseCtrl & EFUSE_ENC_TYPE_MASK) == EFUSE_ENC_TYPE_SM4)) {
 		pSecureInfo->EncType = OP_ENCRYPT_SM4;
-		printf("Encrypte SM4.\r\n");
+		printf("Encrypt SM4.\r\n");
 	}
 	else {
 		printf("Encrypt type not match efuse set...\r\n");
@@ -303,25 +313,18 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 
 	SrcAddress = FsblInstancePtr->ImageOffsetAddress + PtHdr->PartitionOffset;
 	LoadAddress = PtHdr->DestLoadAddr;
-	Length = PtHdr->TotalPartitionLen;
+	Length = PtHdr->PartitionLen;
 
 	printf("partition src address      : 0x%08x\r\n", SrcAddress);
 	printf("partition load dest address: 0x%08x\r\n", LoadAddress);
 	printf("partition length           : 0x%08x\r\n", Length);
 
-//	Status = FsblInstancePtr->DeviceOps.DeviceCopy(SrcAddress, LoadAddress, Length, NULL);
-//	if(ALFSBL_SUCCESS != Status) {
-//		goto END;
-//	}
-
-//	pSecureInfo->InputAddr      = LoadAddress;
-//	pSecureInfo->OutputAddr     = LoadAddress;
-//	pSecureInfo->DataLength     = PtHdr->PartitionLen;
 	pSecureInfo->HashOutAddr    = (uint32_t)HashBuffer;
 	pSecureInfo->KeyMode        = OP_BHDR_KEY;
 	pSecureInfo->EncMode        = SYM_ECB;
 	pSecureInfo->EncDir         = SYM_DECRYPT;
 	pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+	pSecureInfo->BlockMode      = WHOLE_BLOCK;
 
 	/// check secure info
 	printf("Auth type :  %02x\r\n", pSecureInfo->AuthType);
@@ -336,7 +339,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 		Status = FsblInstancePtr->DeviceOps.DeviceCopy(
 				     SrcAddress,
 					 LoadAddress,
-					 PtHdr->PartitionLen,
+					 Length,
 					 pSecureInfo);
 		if(ALFSBL_SUCCESS != Status) {
 			goto END;
@@ -358,7 +361,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 	/// calculate data hash without csu dma
 	if((pSecureInfo->EncType == OP_ENCRYPT_NONE) && (pSecureInfo->HashType != OP_HASH_NONE)) {
 		printf("calculate hash\r\n");
-		pSecureInfo->InputAddr = LoadAddress;
+		pSecureInfo->HashDataAddr = LoadAddress;
 		Status = AlFsbl_Hash_1(pSecureInfo);
 		if(Status != ALFSBL_SUCCESS) {
 			goto END;
@@ -372,7 +375,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 		Status = FsblInstancePtr->DeviceOps.DeviceCopy(
 				     ImageOffsetAddress + PtHdr->HashDataOffset,
 				     LoadAddress + PtHdr->PartitionLen,
-				     HashByteLen,
+				     32,
 				     NULL);
 		if(ALFSBL_SUCCESS != Status) {
 			goto END;
@@ -390,7 +393,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 	}
 
 	if(pSecureInfo->AuthType != OP_AUTH_NONE) {
-		printf("auth\r\n");
+		printf("Auth\r\n");
 		/// copy partition ac to local variate;
 		PartitionAcOffset = PtHdr->AcOffset;
 		printf("Partition AC offset: %08x\r\n", PartitionAcOffset);
@@ -417,6 +420,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 		if(Status != ALFSBL_SUCCESS) {
 			goto END;
 		}
+		printf("Authenticat pass\r\n");
 	}
 
 	/// check decrypt result:
@@ -425,7 +429,7 @@ static uint32_t AlFsbl_LoadPsPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *
 		printf("%08x\r\n", *ocmptr);
 		ocmptr++;
 	}
-	printf("\r\n\r\nUpdate handoff values\r\n");
+	printf("Update handoff values\r\n");
 
 
 	/// update handoff values
@@ -442,21 +446,23 @@ END:
 
 
 
-
-static uint32_t AlFsbl_LoadPlPartition(AlFsblInfo *FsblInstancePtr, uint32_t PartitionIdx)
+static uint32_t AlFsbl_LoadPlPartition(AlFsblInfo *FsblInstancePtr, SecureInfo *pSecureInfo, uint32_t PartitionIdx)
 {
-	uint32_t Status = 0;
-
-	AlFsbl_PartitionHeader *PtHdr;
 
 	uint32_t i;
-	uint32_t SrcAddress;
-	uint32_t LoadAddress;
-	uint32_t Length;
-	uint32_t BitStreamLength_BE;  /// big endian
-	uint32_t BitStreamLength_LE;  /// little endian
-
+	uint32_t Status = 0;
+	uint8_t  HashBuffer[32];
+	uint8_t  HashData[32];
+	uint32_t HashByteLen;
+	uint32_t PartitionAcOffset;
+	uint8_t  PartitionAc[ALFSBL_AUTH_BUFFER_SIZE];
+	uint32_t ImageOffsetAddress;
+	uint32_t BootDevice;
+	uint8_t  DdrAvailable = FALSE;
+	uint32_t BlockSizeMax;
+	AlFsbl_PartitionHeader *PtHdr;
 	PtHdr = &(FsblInstancePtr->ImageHeader.PartitionHeader[PartitionIdx]);
+	ImageOffsetAddress = FsblInstancePtr->ImageOffsetAddress;
 
 	printf("Trigger pl reset\r\n");
 	REG32(SYSCTRL_S_GLOBAL_SRSTN) = REG32(SYSCTRL_S_GLOBAL_SRSTN) & (~SYSCTRL_S_GLOBAL_SRSTN_MSK_GLB_PL_SRST);
@@ -470,89 +476,269 @@ static uint32_t AlFsbl_LoadPlPartition(AlFsblInfo *FsblInstancePtr, uint32_t Par
 	printf("Set PCAP enable\r\n");
 	REG32(CSU_PCAP_ENABLE) = 1;
 
-	SrcAddress = FsblInstancePtr->ImageOffsetAddress + PtHdr->PartitionOffset;
-
-	printf("Read Bitstream Length\r\n");
-	Status = FsblInstancePtr->DeviceOps.DeviceCopy(SrcAddress, (uint32_t)(&BitStreamLength_BE), 4, NULL);
-	if(ALFSBL_SUCCESS != Status) {
+	// check pl init done;
+	Status = AlFsbl_CheckPlInitDone();
+	if(Status != ALFSBL_SUCCESS) {
 		goto END;
 	}
-	BitStreamLength_LE = endian_convert(BitStreamLength_BE);
-	printf("Bitstream Byte Length: %08x\r\n", BitStreamLength_LE);
-	BitStreamLength_LE -= 4;
-	SrcAddress += 4;
 
-#if 0
-	BitStreamLength_LE = BitStreamLength_LE - (BitStreamLength_LE % 32);
-	printf("load bitstream to pcap through qspi xip mode\n");
-	Status = AlFsbl_CsuDmaCopy(SrcAddress + QSPI_XIP_BASEADDR, CSU_PCAP_CSULOCAL_WR_STREAM, BitStreamLength_LE, CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR);
+	BlockSizeMax = FsblInstancePtr->DeviceOps.BlockSizeMax;
+	printf("Boot device block size max: %x\r\n", BlockSizeMax);
+
+	/// temp test: pl init and done:
+	printf("PL init done\r\n");
+	printf("cfg state: %08x\r\n", REG32(CRP_CFG_STATE));
+
+	pSecureInfo->HashOutAddr    = (uint32_t)HashBuffer;
+	pSecureInfo->KeyMode        = OP_BHDR_KEY;
+	pSecureInfo->EncMode        = SYM_ECB;
+	pSecureInfo->EncDir         = SYM_DECRYPT;
+	pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+
+	/// check secure info
+	printf("Auth type :  %02x\r\n", pSecureInfo->AuthType);
+	printf("Hash type :  %02x\r\n", pSecureInfo->HashType);
+	printf("Enc type  :  %02x\r\n", pSecureInfo->EncType);
+	printf("Enc mode  :  %02x\r\n", pSecureInfo->EncMode);
+	printf("Key mode  :  %02x\r\n", pSecureInfo->KeyMode);
+
+	BootDevice = FsblInstancePtr->PrimaryBootDevice;
+
+	if(((pSecureInfo->HashType != OP_HASH_NONE) && (pSecureInfo->EncType == OP_ENCRYPT_NONE)) ||
+	   ((BootDevice != ALFSBL_BOOTMODE_QSPI24) && (BootDevice != ALFSBL_BOOTMODE_QSPI32))) {
+		if(DdrAvailable) {
+			/// todo
+		}
+		else {
+
+#if defined FSBL_PL_SIMU_MODE_3
+			pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+			printf("to ocm in blocks\r\n");
+			Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, (uint32_t)ReadBuffer, 0);
+			if(Status != ALFSBL_SUCCESS) {
+				goto END;
+			}
+#else
+			pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+			printf("to ocm in blocks\r\n");
+			Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, (uint32_t)ReadBuffer, BlockSizeMax);
+			if(Status != ALFSBL_SUCCESS) {
+				goto END;
+			}
 #endif
+		}
+	}
+	else {
+		//printf("to pcap\n");
+		//pSecureInfo->CsuAddrIncMode = CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR;
+#if defined FSBL_PL_SIMU_MODE_1
+		/// test mode 1: transfer bitstream in blocks, directly to PCAP WR STREAM
+		printf("to pcap in blocks\r\n");
+		pSecureInfo->CsuAddrIncMode = CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR;
+		Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, CSU_PCAP_WR_STREAM, BlockSizeMax);
+#elif defined FSBL_PL_SIMU_MODE_2
+		/// test mode 2: transfer bitstream in blocks, firstly to buffer in ocm, then to PCAP WR STREAM
+		printf("to buffer in ocm in blocks\r\n");
+		pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+		Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, (uint32_t)ReadBuffer, BlockSizeMax);
+#elif defined FSBL_PL_SIMU_MODE_3
+		printf("to buffer in ocm, whole block\r\n");
+		pSecureInfo->CsuAddrIncMode = CSUDMA_DST_INCR | CSUDMA_SRC_INCR;
+		Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, (uint32_t)ReadBuffer, 0);
+#else
+		printf("to pcap, whole block\r\n");
+		pSecureInfo->CsuAddrIncMode = CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR;
+		Status = AlFsbl_BitstreamDataTransfer(FsblInstancePtr, pSecureInfo, PartitionIdx, CSU_PCAP_WR_STREAM, 0);
+#endif
+		if(Status != ALFSBL_SUCCESS) {
+			goto END;
+		}
+	}
 
-#if 1
-	printf("Read Bitstream to local buffer\r\n");
-	LoadAddress = (uint32_t)ReadBuffer;
-	Status = FsblInstancePtr->DeviceOps.DeviceCopy(SrcAddress, LoadAddress, BitStreamLength_LE, NULL);
-	if(ALFSBL_SUCCESS != Status) {
-		goto END;
+
+	/// read hash from boot image and check
+	if((pSecureInfo->HashType != OP_HASH_NONE) && (PtHdr->HashDataOffset != 0)) {
+		/// read hash from boot image
+		printf("read hash\r\n");
+		HashByteLen = (pSecureInfo->HashType == OP_HASH_SHA256) ? 32 : 16;
+		Status = FsblInstancePtr->DeviceOps.DeviceCopy(
+				     ImageOffsetAddress + PtHdr->HashDataOffset,
+					 (uint32_t)HashData,
+				     32,
+				     NULL);
+		if(ALFSBL_SUCCESS != Status) {
+			goto END;
+		}
+
+		/// compare hash
+		Status = AlFsbl_CompareHash(
+				     HashBuffer,
+					 HashData,
+				     HashByteLen);
+		if(Status != ALFSBL_SUCCESS) {
+			goto END;
+		}
+		printf("Hash check passed...\r\n");
 	}
 
-	BitStreamLength_LE = BitStreamLength_LE - (BitStreamLength_LE % 32);
-	Status = AlFsbl_CsuDmaCopy(LoadAddress, CSU_PCAP_CSULOCAL_WR_STREAM, BitStreamLength_LE, CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR);
-	if(ALFSBL_SUCCESS != Status) {
-		return Status;
+	/// auth check if necessary
+	if(pSecureInfo->AuthType != OP_AUTH_NONE) {
+		printf("auth\r\n");
+		/// copy partition ac to local variate;
+		PartitionAcOffset = PtHdr->AcOffset;
+		printf("Partition AC offset: %08x\r\n", PartitionAcOffset);
+		if(PartitionAcOffset == 0) {
+			printf("ALFSBL_ERROR_PARTITION_HEADER_ACOFFSET\r\n");
+			Status = ALFSBL_ERROR_PH_ACOFFSET;
+			goto END;
+		}
+		else {
+			printf("Copy Partition Header AC\r\n");
+			Status = FsblInstancePtr->DeviceOps.DeviceCopy(
+					     ImageOffsetAddress + PartitionAcOffset,
+					     (PTRSIZE)PartitionAc,
+					     ALFSBL_AUTH_BUFFER_SIZE,
+					     NULL);
+			if(Status != ALFSBL_SUCCESS) {
+				goto END;
+			}
+		}
+		/// initial auth parameters;
+		pSecureInfo->PubKeyAddr = (uint32_t)(PartitionAc + ALAC_SPK_OFFSET);
+		pSecureInfo->SignatureAddr = (uint32_t)(PartitionAc + ALAC_PART_SIGNATURE_OFFSET);
+		Status = AlFsbl_Auth_1(pSecureInfo);
+		if(Status != ALFSBL_SUCCESS) {
+			goto END;
+		}
+		printf("Authenticate pass\r\n");
 	}
-#endif
 
-#if 0
-	/// reset pl, release reset before pl bitstream config
-	if(FsblInstancePtr->ResetReason == FSBL_SYSTEM_RESET) {
-		REG32(SYSCTRL_S_GLOBAL_SRSTN) = REG32(SYSCTRL_S_GLOBAL_SRSTN) & (~SYSCTRL_S_GLOBAL_SRSTN_MSK_GLB_PL_SRST);
+	/// temp test: pl init and done:
+	printf("cfg state: %08x\r\n", REG32(CRP_CFG_STATE));
+
+	/// program_done
+	Status = ALFsbl_BitStreamProgDone();
+	if(ALFSBL_SUCCESS != Status) {
+		goto END;
 	}
 
-	/// release pl reset
-	if(FsblInstancePtr->ResetReason == FSBL_SYSTEM_RESET) {
-		REG32(SYSCTRL_S_GLOBAL_SRSTN) = REG32(SYSCTRL_S_GLOBAL_SRSTN) | (SYSCTRL_S_GLOBAL_SRSTN_MSK_GLB_PL_SRST);
+	/// temp test: pl init and done:
+	printf("cfg state: %08x\r\n", REG32(CRP_CFG_STATE));
+
+	/// check cfg state after bitstream loaded
+	if((REG32(CRP_CFG_STATE)) != 7) {
+		Status = ALFSBL_ERROR_PL_CFG_STATE_ERROR & (REG32(CRP_CFG_STATE) | 0xFFFFFFF8UL);
+		goto END;
 	}
 
-	PtHdr = &(FsblInstancePtr->ImageHeader.PartitionHeader[PartitionIdx]);
 
 	/// set PCAP not enable, to make the signal to config model not change
 	REG32(CSU_PCAP_ENABLE) = 0;
 
-	/// Copy PL Partition to local buffer
+
+END:
+	return Status;
+}
+
+
+
+
+static uint32_t AlFsbl_BitstreamDataTransfer(AlFsblInfo *FsblInstancePtr, SecureInfo *pSecureInfo,
+		                                     uint32_t PartitionIdx, uint32_t DestAddr,
+										     uint32_t BlockSizeMax)
+{
+	uint32_t Status = 0;
+	AlFsbl_PartitionHeader *PtHdr;
+	uint32_t ImageOffsetAddress;
+	uint32_t SrcAddress;
+	uint32_t Length;
+	uint32_t BlockLength;
+	uint32_t BlockSrcAddr;
+	uint32_t BlockDestAddr;
+	uint32_t BlockCnt = 0;
+
+	PtHdr = &(FsblInstancePtr->ImageHeader.PartitionHeader[PartitionIdx]);
+	ImageOffsetAddress = FsblInstancePtr->ImageOffsetAddress;
 	SrcAddress = FsblInstancePtr->ImageOffsetAddress + PtHdr->PartitionOffset;
-	LoadAddress = (uint32_t)ReadBuffer;
-	Length = PtHdr->TotalPartitionLen;
+	Length = PtHdr->PartitionLen;
 
-	printf("partition src address      : 0x%08x\n", SrcAddress);
-	printf("partition load dest address: 0x%08x\n", LoadAddress);
-	printf("partition length           : 0x%08x\n", Length);
+	printf("partition src address      : 0x%08x\r\n", SrcAddress);
+	printf("partition load dest address: 0x%08x\r\n", DestAddr);
+	printf("partition length           : 0x%08x\r\n", Length);
 
-	Status = FsblInstancePtr->DeviceOps.DeviceCopy(SrcAddress, LoadAddress, Length);
-	if(ALFSBL_SUCCESS != Status) {
-		goto END;
-	}
 
-	/// check pl init done
-	Status = AlFsbl_CheckPlInitDone();
+	BlockSrcAddr  = SrcAddress;
+	BlockDestAddr = DestAddr;
+	if(BlockSizeMax == 0) {
+		pSecureInfo->BlockMode = WHOLE_BLOCK;
+		printf("whole block\r\n");
+		BlockLength = Length;
+	}
+	else if(Length > BlockSizeMax) {
+		pSecureInfo->BlockMode = FIRST_BLOCK;
+		printf("first block\r\n");
+		BlockLength = BlockSizeMax;
+	}
+	else {
+		pSecureInfo->BlockMode = WHOLE_BLOCK;
+		printf("whole block\r\n");
+		BlockLength = Length;
+	}
 
-	/// enable pcap, to remove pcap-pl isolation
-	REG32(CSU_PCAP_ENABLE) = 1;
+	while(Length != 0) {
+		/// data transfer
+		printf("transfer data, Block num: %d\r\n", BlockCnt);
+		Status = FsblInstancePtr->DeviceOps.DeviceCopy(
+				     BlockSrcAddr,
+					 BlockDestAddr,
+					 BlockLength,
+					 pSecureInfo);
+		if(Status != ALFSBL_SUCCESS) {
+			goto END;
+		}
 
-	/// first four bytes is data length before program done stream
-	BitStreamLength = *((uint32_t *)(ReadBuffer));
-	SrcAddress = SrcAddress + 4;
+		/// calculate hash if hash only but not encrytped.
+		if((pSecureInfo->EncType == OP_ENCRYPT_NONE) &&
+		   (pSecureInfo->HashType != OP_HASH_NONE)   &&
+		   (BlockDestAddr != CSU_PCAP_WR_STREAM)) {
+			printf("calculate hash\r\n");
+			pSecureInfo->HashDataAddr = BlockDestAddr;
+			Status = AlFsbl_Hash_1(pSecureInfo);
+			if(Status != ALFSBL_SUCCESS) {
+				goto END;
+			}
+		}
 
-	/// write pl partition bitstream (before program done stream) to PCAP WR_STREAM
-	AlFsbl_CsuDmaCopy(SrcAddress, CSU_PCAP_CSULOCAL_WR_STREAM, BitStreamLength - 4, CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR);
-#endif
+		/// if dest addr is not pcap_wstream, transfer data to pcap wstream
+		if(BlockDestAddr != CSU_PCAP_WR_STREAM) {
+			printf("transfer data to pcap\r\n");
+			Status = AlFsbl_CsuDmaCopy(
+					     BlockDestAddr,
+					     CSU_PCAP_WR_STREAM,
+						 BlockLength,
+						 CSUDMA_DST_NOINCR | CSUDMA_SRC_INCR);
+			if(Status != ALFSBL_SUCCESS) {
+				goto END;
+			}
+		}
+		if(BlockSizeMax == 0)
+			goto END;
 
+		BlockSrcAddr  += BlockLength;
+		Length        -= BlockLength;
 
+		pSecureInfo->BlockMode = (Length > BlockSizeMax) ? MIDDLE_BLOCK : LAST_BLOCK;
+		BlockLength = (Length > BlockSizeMax) ? BlockSizeMax : Length;
+		BlockCnt++;
+	}
 
 END:
 	return Status;
 }
 
+
+
+
 #define  RPU_MTIMER_COUNTER64     (0x68020000)
 #define  RPU_MTIMER_COUNTER64_LOW (0x68020000)
 #define  RPU_MTIMER_COUNTER64_HI  (0x68020004)
@@ -562,18 +748,19 @@ uint32_t AlFsbl_CheckPlInitDone(void)
 	uint32_t Status = ALFSBL_SUCCESS;
 	volatile uint32_t StartTime;
 	uint32_t InitDone;
+	uint32_t cnt;
 
 	StartTime = REG32(RPU_MTIMER_COUNTER64_LOW);
 
 	do {
-		InitDone = REG32(CRP_CFG_STATE) & CRP_CFG_STATE_MSK_PL2PS_INITN;
-
 		/// if pl init done not asserted in 90 seconds, report an error
 		if((REG32(RPU_MTIMER_COUNTER64_LOW) - StartTime ) > (90 * 10 * 1000 * 1000)) {
 			Status = ALFSBL_ERROR_PL_INIT_TIMEOUT;
 			goto END;
 		}
 
+		InitDone = REG32(CRP_CFG_STATE) & CRP_CFG_STATE_MSK_PL2PS_INITN;
+
 	} while(InitDone != CRP_CFG_STATE_MSK_PL2PS_INITN);
 
 END:
@@ -582,9 +769,30 @@ END:
 }
 
 
+uint32_t ALFsbl_BitStreamProgDone(void)
+{
+	uint32_t Status;
+	uint32_t ProgDone[3] = {0x90300002, 0x00000005, 0x1655e833};
+	uint32_t BitStreamNoop = 0x80000000;
+
+	REG32(CSU_PCAP_WR_STREAM) = ProgDone[0];
+	REG32(CSU_PCAP_WR_STREAM) = ProgDone[1];
+	REG32(CSU_PCAP_WR_STREAM) = ProgDone[2];
+
+	Status = AlFsbl_CsuDmaCopy(
+			     (uint32_t)(&BitStreamNoop),
+				 CSU_PCAP_CSULOCAL_WR_STREAM,
+				 8192,   /// 2048 words of noop
+				 (CSUDMA_DST_NOINCR | CSUDMA_SRC_NOINCR));
+
+	return Status;
+}
+
+
+
 void AlFsbl_PrintPartitionHeaderInfo(AlFsbl_PartitionHeader *PtHdr)
 {
-	printf("\r\nPartition Header Infomation:\r\n");
+	printf("\nPartition Header Infomation:\n");
 	printf("Partition Length            : 0x%08x\r\n", PtHdr->PartitionLen);
 	printf("Extracted Partition Length  : 0x%08x\r\n", PtHdr->ExtractedPartitionLen);
 	printf("Total Partition Length      : 0x%08x\r\n", PtHdr->TotalPartitionLen);
diff --git a/application/fsbl/alfsbl_partition_load.h b/application/fsbl/alfsbl_partition_load.h
old mode 100755
new mode 100644
index 42004c1..a0fb86b
--- a/application/fsbl/alfsbl_partition_load.h
+++ b/application/fsbl/alfsbl_partition_load.h
@@ -16,7 +16,7 @@ extern "C" {
 #include "alfsbl_data.h"
 #include "alfsbl_hw.h"
 #include "alfsbl_err_code.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
 
 
 
diff --git a/application/fsbl/alfsbl_qspi.c b/application/fsbl/alfsbl_qspi.c
old mode 100755
new mode 100644
index fc6f430..fc7f6bd
--- a/application/fsbl/alfsbl_qspi.c
+++ b/application/fsbl/alfsbl_qspi.c
@@ -11,7 +11,7 @@
 
 #include "alfsbl_qspi.h"
 #include "alfsbl_misc.h"
-#include "alfsbl_sec.h"
+#include "al9000_secure.h"
 #include "qspi_drv.h"
 #include "qspi_flash_drv.h"
 
@@ -106,7 +106,7 @@ void QSPI_FLASH_SR_BIT_SET (unsigned bit_num, unsigned bit_val)
 
 
 
-uint32_t AlFsbl_Qspi24Init(void)
+uint32_t AlFsbl_Qspi24Init(uint32_t *pBlockSizeMax)
 {
 	QspiParams qspi_params;
 	Csu_QspiInit(&qspi_params);
@@ -121,6 +121,8 @@ uint32_t AlFsbl_Qspi24Init(void)
 
     Qspi_Enable(g_pdev);
 
+    *pBlockSizeMax = 512;   // this is only for simulation test
+
 	return 0;
 }
 
diff --git a/application/fsbl/alfsbl_qspi.h b/application/fsbl/alfsbl_qspi.h
old mode 100755
new mode 100644
index 442165a..f101f21
--- a/application/fsbl/alfsbl_qspi.h
+++ b/application/fsbl/alfsbl_qspi.h
@@ -13,16 +13,17 @@ extern "C" {
 #endif
 
 #include <stdint.h>
+#include "al9000_secure.h"
 #include "alfsbl_data.h"
 #include "alfsbl_hw.h"
 
 
 
-uint32_t AlFsbl_Qspi24Init(void);
+uint32_t AlFsbl_Qspi24Init(uint32_t *pBlockSizeMax);
 uint32_t AlFsbl_Qspi24Copy(uint64_t SrcAddress, PTRSIZE DestAddress, uint32_t Length, SecureInfo *pSecureInfo);
 uint32_t AlFsbl_Qspi24Release(void);
 
-uint32_t AlFsbl_Qspi32Init(void);
+uint32_t AlFsbl_Qspi32Init(uint32_t *pBlockSizeMax);
 uint32_t AlFsbl_Qspi32Copy(uint64_t SrcAddress, PTRSIZE DestAddress, uint32_t Length, SecureInfo *pSecureInfo);
 uint32_t AlFsbl_Qspi32Release(void);
 
diff --git a/application/fsbl/alfsbl_sd.c b/application/fsbl/alfsbl_sd.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/alfsbl_sd.h b/application/fsbl/alfsbl_sd.h
old mode 100755
new mode 100644
index 3986fcc..c53ec8c
--- a/application/fsbl/alfsbl_sd.h
+++ b/application/fsbl/alfsbl_sd.h
@@ -16,6 +16,8 @@ extern "C" {
 #include "alfsbl_data.h"
 #include "alfsbl_hw.h"
 #include "driver/sd_emmc/FATFS/ff.h"
+#include "al9000_secure.h"
+
 
 extern FIL fil;
 extern FATFS fs;
diff --git a/application/fsbl/alfsbl_sec.c b/application/fsbl/alfsbl_sec.c
deleted file mode 100755
index 7343226..0000000
--- a/application/fsbl/alfsbl_sec.c
+++ /dev/null
@@ -1,577 +0,0 @@
-/*
- * alfsbl_sec.c
- *
- *  Created on: May 25, 2022
- *      Author: qsxu
- */
-
-#include <stdio.h>
-
-#include "alfsbl_err_code.h"
-#include "alfsbl_data.h"
-#include "alfsbl_sec.h"
-#include "alfsbl_hw.h"
-#include "alfsbl_misc.h"
-#include "demosoc.h"
-#ifndef __riscv
-#include "gic_v3_addr.h"
-#endif
-
-//extern uint8_t  ReadBuffer[READ_BUFFER_SIZE];
-extern uint8_t  AuthBuffer[ALFSBL_AUTH_BUFFER_SIZE];
-
-/// for temporary test only, will remove later, xuqingsong
-
-//uint8_t aes256_key0[] = {
-//		0x7B,0xCD,0xD8,0xD1,
-//		0x91,0x6E,0xA8,0x38,
-//		0xBE,0x2F,0x41,0x0D,
-//		0x7E,0xC4,0x59,0xC6,
-//		0xF9,0x52,0x8F,0xCF,
-//		0xD9,0x1B,0x22,0x10,
-//		0x03,0x5D,0xB4,0xE3,
-//		0x78,0xD6,0x09,0x55};
-
-uint8_t aes256_key0[] = {
-		0x78, 0xd6, 0x09, 0x55,
-		0x03, 0x5d, 0xb4, 0xe3,
-		0xd9, 0x1b, 0x22, 0x10,
-		0xf9, 0x52, 0x8f, 0xcf,
-		0x7e, 0xc4, 0x59, 0xc6,
-		0xbe, 0x2f, 0x41, 0x0d,
-		0x91, 0x6e, 0xa8, 0x38,
-		0x7b, 0xcd, 0xd8, 0xd1};
-
-
-
-//uint8_t aes256_key0[] = {0xD1,0xD8,0xCD,0x7B, 0x38,0xA8,0x6E,0x91,
-//		                 0x0D,0x41,0x2F,0xBE, 0xC6,0x59,0xC4,0x7E,
-//						 0xCF,0x8F,0x52,0xF9, 0x10,0x22,0x1B,0xD9,
-//						 0xE3,0xB4,0x5D,0x03, 0x55,0x09,0xD6,0x78};
-
-uint8_t aes256_key1[] = {0x51,0x37,0xDC,0x62, 0x09,0xF9,0xBA,0x00,
-		                 0xD7,0x03,0x98,0xBC, 0xEF,0xB9,0x1D,0x58,
-						 0xDD,0x9A,0xE1,0xE7, 0x5F,0x1A,0x0A,0xCB,
-						 0x23,0x51,0xCF,0xD5, 0xC0,0x03,0x40,0x54};
-
-uint8_t sm4_key0[]    = {0x55,0x09,0xD6,0x78, 0xE3,0xB4,0x5D,0x03,
-		                 0x10,0x22,0x1B,0xD9, 0xCF,0x8F,0x52,0xF9};
-
-uint8_t sm4_key1[]    = {0x51,0x37,0xDC,0x62, 0x09,0xF9,0xBA,0x00,
-		                 0xD7,0x03,0x98,0xBC, 0xEF,0xB9,0x1D,0x58};
-
-//uint8_t aes256_key0[] = {0x55,0x09,0xD6,0x78, 0xE3,0xB4,0x5D,0x03,
-//		                 0x10,0x22,0x1B,0xD9, 0xCF,0x8F,0x52,0xF9,
-//						 0xC6,0x59,0xC4,0x7E, 0x0D,0x41,0x2F,0xBE,
-//						 0x38,0xA8,0x6E,0x91, 0xD1,0xD8,0xCD,0x7B};
-//
-//uint8_t aes256_key1[] = {0x51,0x37,0xDC,0x62, 0x09,0xF9,0xBA,0x00,
-//		                 0xD7,0x03,0x98,0xBC, 0xEF,0xB9,0x1D,0x58,
-//						 0xDD,0x9A,0xE1,0xE7, 0x5F,0x1A,0x0A,0xCB,
-//						 0x23,0x51,0xCF,0xD5, 0xC0,0x03,0x40,0x54};
-//
-//uint8_t sm4_key0[]    = {0x55,0x09,0xD6,0x78, 0xE3,0xB4,0x5D,0x03,
-//		                 0x10,0x22,0x1B,0xD9, 0xCF,0x8F,0x52,0xF9};
-//
-//uint8_t sm4_key1[]    = {0x51,0x37,0xDC,0x62, 0x09,0xF9,0xBA,0x00,
-//		                 0xD7,0x03,0x98,0xBC, 0xEF,0xB9,0x1D,0x58};
-//SecMsgDef SecCmd;
-volatile uint32_t MsgFlag = 0;
-
-uint32_t AlFsbl_CalcCrc32(uint8_t *pBuffer, uint32_t Length)
-{
-	uint8_t i;
-	uint32_t crc = 0xffffffff; // initial value
-
-	while(Length--) {
-		crc ^= *pBuffer++;
-		for(i = 0; i < 8; i++) {
-			if(crc & 1) {
-				crc = (crc >> 1) ^ 0xEDB88320;
-			}
-			else {
-				crc = (crc >> 1);
-			}
-		}
-	}
-
-	return (~crc);
-}
-
-
-uint32_t AlFsbl_ChecksumCheck(uint8_t *pBuffer, uint32_t Length, uint32_t Checksum)
-{
-	uint32_t Status = ALFSBL_SUCCESS;
-	uint32_t Cal_Checksum = 0;
-	uint32_t Count;
-
-	/// CRC32
-	Cal_Checksum = AlFsbl_CalcCrc32(pBuffer, Length);
-	printf("Calculated Checksum: 0x%08x\r\n", Cal_Checksum);
-
-	if(Cal_Checksum != Checksum) {
-		Status = ALFSBL_ERROR_CHECKSUM_ERROR;
-	}
-	else {
-		printf("checksum check pass...\r\n");
-		Status = ALFSBL_SUCCESS;
-	}
-
-
-	return Status;
-}
-
-
-
-void TriggerSecInterrupt(void)
-{
-	/// trigger rpu2csu interrupt
-	*(volatile uint32_t *)(RPU2CSU_REQ_ADDR) = 1;
-	*(volatile uint32_t *)(RPU2CSU_REQ_ADDR) = 0;
-	return;
-}
-
-
-
-void MsgReceive(void)
-{
-	MsgFlag = 1;
-	printf("ack\r\n");
-	*(volatile uint32_t *)(RPU2CSU_ACK_ADDR) = 0;
-	return;
-}
-
-
-
-void RpuCsuAckHandler()
-{
-	MsgReceive();
-}
-
-
-
-uint32_t SecureIrqInit(void)
-{
-	uint32_t ret;
-#ifndef __riscv
-	REG32(GICD_ISENABLER+8) = 0x80000000;
-	REG32(GICD_ISENABLER+12) = 0x1;
-#endif
-	ret = ECLIC_Register_IRQ(
-			RPU2CSU_ACK_IRQN,
-			ECLIC_NON_VECTOR_INTERRUPT,
-			ECLIC_POSTIVE_EDGE_TRIGGER,
-			1,
-			0,
-			RpuCsuAckHandler);
-	__enable_irq();
-	return ret;
-}
-
-
-
-uint32_t CheckAckValid(AckDef *pAck)
-{
-	uint32_t Status = ALFSBL_SUCCESS;
-	printf("Check CSU ACK\r\n");
-	while(MsgFlag == 0) {
-		/// wait for ack interrupt
-	}
-	MsgFlag = 0;  /// clear flag
-
-	if(pAck->Cmd != CMD_ACK) {
-		printf("Invalid ACK Command!\r\n");
-		Status = ALFSBL_ERROR_INVALID_CSU_ACK;
-		goto END;
-	}
-	else {
-		pAck->Cmd = 0;   /// clear ack
-	}
-
-	if(pAck->Option0.Low == OP_DMA_DONE) {
-		goto END;
-	}
-	else if(pAck->Option0.Low == OP_AUTH_PASS) {
-		goto END;
-	}
-	else if(pAck->Option0.Low == OP_AUTH_FAIL) {
-		Status = ALFSBL_ERROR_AUTH_FAIL;
-	}
-	else if(pAck->Option0.Low == OP_HASH_DONE) {
-		goto END;
-	}
-	else {
-		printf("Invalid ACK Command!\r\n");
-		Status = ALFSBL_ERROR_INVALID_CSU_ACK;
-		goto END;
-	}
-
-
-END:
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_Hash_1(SecureInfo *pSecureInfo)
-{
-	uint32_t Status = 0;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-	uint32_t HashByteLen = 0;
-
-	if((pSecureInfo->HashType != OP_HASH_SHA256) &&
-	   (pSecureInfo->HashType != OP_HASH_SM3) &&
-	   (pSecureInfo->HashType != OP_HASH_NONE)) {
-		Status = ALFSBL_ERROR_SEC_PARAM_INVALID;
-	}
-	if(pSecureInfo->HashType == OP_HASH_NONE) {
-		goto END;
-	}
-
-	pMsg->Cmd = CMD_HASH;
-	pMsg->Option0.Low           = pSecureInfo->HashType;
-	pMsg->HashParam.DataInAddr  = pSecureInfo->InputAddr;
-	pMsg->HashParam.DataLen     = pSecureInfo->DataLength;
-	pMsg->HashParam.HashOutAddr = pSecureInfo->HashOutAddr;
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-	if(Status != ALFSBL_SUCCESS) {
-		goto END;
-	}
-END:
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_Hash(uint32_t DataInAddr, uint32_t DataByteLen, uint32_t HashOutAddr, uint8_t HashType)
-{
-	uint32_t Status;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	pMsg->Cmd = CMD_HASH;
-
-	//if(EfuseCtrl & EFUSE_PPK_HASH_TYPE_MASK == EFUSE_PPK_HASH_TYPE_SM3) {
-	if(HashType == HASH_TYPE_SM3) {
-		pMsg->Option0.Low = OP_HASH_SM3;
-	}
-	//else if(EfuseCtrl & EFUSE_PPK_HASH_TYPE_MASK == EFUSE_PPK_HASH_TYPE_SHA256) {
-	else if(HashType == HASH_TYPE_SHA256) {
-		pMsg->Option0.Low = OP_HASH_SHA256;
-	}
-
-	pMsg->HashParam.DataInAddr  = DataInAddr;
-	pMsg->HashParam.DataLen     = DataByteLen;
-	pMsg->HashParam.HashOutAddr = HashOutAddr;
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_CompareHash(uint8_t *pHash1, uint8_t *pHash2, uint32_t HashLen)
-{
-	uint32_t Idx;
-	uint32_t *pHash1_word = (uint32_t *)(pHash1);
-	uint32_t *pHash2_word = (uint32_t *)(pHash2);
-
-	for(Idx = 0; Idx < HashLen / 4; Idx++) {
-//		printf("%08x %08x\r\n", pHash1_word[Idx], pHash2_word[Idx]);
-
-		if(pHash1_word[Idx] != pHash2_word[Idx]) {
-			printf("hash different: %08x, %08x\r\n", pHash1_word[Idx], pHash2_word[Idx]);
-			return ALFSBL_HASH_FAIL;
-		}
-	}
-	return ALFSBL_SUCCESS;
-}
-
-
-
-uint32_t AlFsbl_Auth_1(SecureInfo *pSecureInfo)
-{
-	uint32_t Status = 0;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	if((pSecureInfo->AuthType != OP_AUTH_ECC256) &&
-	   (pSecureInfo->AuthType != OP_AUTH_SM2)) {
-		Status = ALFSBL_ERROR_SEC_PARAM_INVALID;
-		goto END;
-	}
-
-	pMsg->Cmd = CMD_AUTH;
-	pMsg->Option0.Low             = pSecureInfo->AuthType;
-	pMsg->AuthParam.PubkeyAddr    = pSecureInfo->PubKeyAddr;
-	pMsg->AuthParam.SignatureAddr = pSecureInfo->SignatureAddr;
-	pMsg->AuthParam.DigestAddr    = pSecureInfo->HashOutAddr;
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-END:
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_Auth(uint32_t PubKeyAddr, uint32_t SignatureAddr, uint32_t DigestAddr, uint8_t AuthType)
-{
-	uint32_t Status;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	pMsg->Cmd = CMD_AUTH;
-	if(AuthType == AUTH_TYPE_ECC256) {
-		pMsg->Option0.Low = OP_AUTH_ECC256;
-	}
-	else if(AuthType == AUTH_TYPE_SM2) {
-		pMsg->Option0.Low = OP_AUTH_SM2;
-	}
-	pMsg->AuthParam.PubkeyAddr    = PubKeyAddr;
-	pMsg->AuthParam.SignatureAddr = SignatureAddr;
-	pMsg->AuthParam.DigestAddr    = DigestAddr;
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_DecHash_1(SecureInfo *pSecureInfo)
-{
-	uint32_t Status = ALFSBL_SUCCESS;
-	uint32_t HashByteLen = 0;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	if((pSecureInfo->EncType != OP_ENCRYPT_AES256) &&
-	   (pSecureInfo->EncType != OP_ENCRYPT_SM4) &&
-	   (pSecureInfo->EncType != OP_ENCRYPT_NONE)) {
-		Status = ALFSBL_ERROR_SEC_PARAM_INVALID;
-		goto END;
-	}
-	if((pSecureInfo->HashType != OP_HASH_SHA256) &&
-	   (pSecureInfo->HashType != OP_HASH_SM3) &&
-	   (pSecureInfo->HashType != OP_HASH_NONE)) {
-		Status = ALFSBL_ERROR_SEC_PARAM_INVALID;
-		goto END;
-	}
-	if((pSecureInfo->KeyMode != OP_BHDR_KEY) &&
-	   (pSecureInfo->KeyMode != OP_USER_KEY)) {
-		Status = ALFSBL_ERROR_SEC_PARAM_INVALID;
-		goto END;
-	}
-
-	pMsg->Cmd = CMD_DMA;
-	/// bootrom and bootgen not support this, use userkey instead for temporary test, xuqingsong
-	pMsg->DmaParam.KeyAddr     = pSecureInfo->KeyAddr;
-	pMsg->DmaParam.IvAddr      = pSecureInfo->IvAddr;
-	pMsg->DmaParam.InputAddr   = pSecureInfo->InputAddr;
-	pMsg->DmaParam.TotalLength = pSecureInfo->DataLength;
-	pMsg->DmaParam.OutputAddr  = pSecureInfo->OutputAddr;
-	pMsg->DmaParam.HashOutAddr = pSecureInfo->HashOutAddr;
-
-	pMsg->DmaParam.OpMode.Bits = SYM_256BIT | (pSecureInfo->EncDir) | SYM_ECB;
-
-	pMsg->Option0.Low  = pSecureInfo->EncType;
-	pMsg->Option0.High = pSecureInfo->HashType;
-	pMsg->Option1.Low  = pSecureInfo->KeyMode;
-
-	if(pSecureInfo->EncType == OP_ENCRYPT_AES256) {
-		pMsg->DmaParam.KeyAddr = aes256_key0;
-	}
-	else if(pSecureInfo->EncType == OP_ENCRYPT_SM4) {
-		pMsg->DmaParam.KeyAddr = sm4_key0;
-	}
-
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-
-END:
-	return Status;
-}
-
-
-
-uint32_t AlFsbl_EncHash(SecEncHashIODef *pSecEncHashIOParam)
-{
-	uint32_t Status = ALFSBL_SUCCESS;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	pMsg->Cmd = CMD_DMA;
-	pMsg->DmaParam.KeyAddr     = pSecEncHashIOParam->KeyAddr;
-	pMsg->DmaParam.IvAddr      = pSecEncHashIOParam->IvAddr;
-	pMsg->DmaParam.InputAddr   = pSecEncHashIOParam->InputAddr;
-	pMsg->DmaParam.TotalLength = pSecEncHashIOParam->TotalLength;
-	pMsg->DmaParam.OutputAddr  = pSecEncHashIOParam->OutputAddr;
-	pMsg->DmaParam.HashOutAddr = pSecEncHashIOParam->HashOutAddr;
-
-	if(pSecEncHashIOParam->EncMethod == OP_ENCRYPT_AES256) {
-		pMsg->DmaParam.OpMode.Bits = SYM_256BIT |  SYM_DECRYPT | SYM_ECB;
-		pMsg->Option0.Low = OP_ENCRYPT_AES256;
-		if(pSecEncHashIOParam->HashEnable) {
-			pMsg->Option0.High = OP_HASH_SHA256;
-		}
-		else {
-			pMsg->Option0.High = OP_HASH_NONE;
-		}
-	}
-	else if(pSecEncHashIOParam->EncMethod == OP_ENCRYPT_SM4){
-		pMsg->DmaParam.OpMode.Bits = SYM_256BIT |  SYM_DECRYPT | SYM_ECB;
-		pMsg->Option0.Low = OP_ENCRYPT_SM4;
-		if(pSecEncHashIOParam->HashEnable) {
-			pMsg->Option0.High = OP_HASH_SM3;
-		}
-		else {
-			pMsg->Option0.High = OP_HASH_NONE;
-		}	}
-	pMsg->Option1.Low = pSecEncHashIOParam->KeyMode;
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-	if(Status != ALFSBL_SUCCESS) {
-		goto END;
-	}
-
-	Status = AlFsbl_CompareHash(0, 0, 0);
-	if(Status != ALFSBL_SUCCESS) {
-		goto END;
-	}
-END:
-	return Status;
-}
-
-uint32_t AlFsbl_CsuDmaCopy(uint32_t SrcAddr, uint32_t DestAddr, uint32_t DataByteLen, uint8_t AddrMode)
-{
-	uint32_t Status = ALFSBL_SUCCESS;
-	uint32_t HashByteLen = 0;
-	SecMsgDef *pMsg = (SecMsgDef *)(CSU_MSG_RAM);
-	AckDef    *pAck = (AckDef *)(CSU_MSG_RAM + 64);
-
-	pMsg->Cmd = CMD_DMA;
-
-	pMsg->DmaParam.KeyAddr     = 0;
-	pMsg->DmaParam.IvAddr      = 0;
-	pMsg->DmaParam.InputAddr   = SrcAddr;
-	pMsg->DmaParam.TotalLength = DataByteLen;
-	pMsg->DmaParam.OutputAddr  = DestAddr;
-	pMsg->DmaParam.HashOutAddr = 0;
-
-	pMsg->Option0.Low  = OP_ENCRYPT_NONE;
-	pMsg->Option0.High = OP_HASH_NONE;
-	pMsg->Option1.Low  = OP_BHDR_KEY;
-	pMsg->Option1.High = AddrMode;
-
-	pMsg->DmaParam.OpMode.Bits = 0;
-
-
-	TriggerSecInterrupt();
-	Status = CheckAckValid(pAck);
-
-END:
-	return Status;
-
-}
-
-
-
-
-
-
-
-
-
-
-
-/*
-static const unsigned int crc32tab[] = {
-	0x00000000L, 0x77073096L, 0xee0e612cL, 0x990951baL,
-	0x076dc419L, 0x706af48fL, 0xe963a535L, 0x9e6495a3L,
-	0x0edb8832L, 0x79dcb8a4L, 0xe0d5e91eL, 0x97d2d988L,
-	0x09b64c2bL, 0x7eb17cbdL, 0xe7b82d07L, 0x90bf1d91L,
-	0x1db71064L, 0x6ab020f2L, 0xf3b97148L, 0x84be41deL,
-	0x1adad47dL, 0x6ddde4ebL, 0xf4d4b551L, 0x83d385c7L,
-	0x136c9856L, 0x646ba8c0L, 0xfd62f97aL, 0x8a65c9ecL,
-	0x14015c4fL, 0x63066cd9L, 0xfa0f3d63L, 0x8d080df5L,
-	0x3b6e20c8L, 0x4c69105eL, 0xd56041e4L, 0xa2677172L,
-	0x3c03e4d1L, 0x4b04d447L, 0xd20d85fdL, 0xa50ab56bL,
-	0x35b5a8faL, 0x42b2986cL, 0xdbbbc9d6L, 0xacbcf940L,
-	0x32d86ce3L, 0x45df5c75L, 0xdcd60dcfL, 0xabd13d59L,
-	0x26d930acL, 0x51de003aL, 0xc8d75180L, 0xbfd06116L,
-	0x21b4f4b5L, 0x56b3c423L, 0xcfba9599L, 0xb8bda50fL,
-	0x2802b89eL, 0x5f058808L, 0xc60cd9b2L, 0xb10be924L,
-	0x2f6f7c87L, 0x58684c11L, 0xc1611dabL, 0xb6662d3dL,
-	0x76dc4190L, 0x01db7106L, 0x98d220bcL, 0xefd5102aL,
-	0x71b18589L, 0x06b6b51fL, 0x9fbfe4a5L, 0xe8b8d433L,
-	0x7807c9a2L, 0x0f00f934L, 0x9609a88eL, 0xe10e9818L,
-	0x7f6a0dbbL, 0x086d3d2dL, 0x91646c97L, 0xe6635c01L,
-	0x6b6b51f4L, 0x1c6c6162L, 0x856530d8L, 0xf262004eL,
-	0x6c0695edL, 0x1b01a57bL, 0x8208f4c1L, 0xf50fc457L,
-	0x65b0d9c6L, 0x12b7e950L, 0x8bbeb8eaL, 0xfcb9887cL,
-	0x62dd1ddfL, 0x15da2d49L, 0x8cd37cf3L, 0xfbd44c65L,
-	0x4db26158L, 0x3ab551ceL, 0xa3bc0074L, 0xd4bb30e2L,
-	0x4adfa541L, 0x3dd895d7L, 0xa4d1c46dL, 0xd3d6f4fbL,
-	0x4369e96aL, 0x346ed9fcL, 0xad678846L, 0xda60b8d0L,
-	0x44042d73L, 0x33031de5L, 0xaa0a4c5fL, 0xdd0d7cc9L,
-	0x5005713cL, 0x270241aaL, 0xbe0b1010L, 0xc90c2086L,
-	0x5768b525L, 0x206f85b3L, 0xb966d409L, 0xce61e49fL,
-	0x5edef90eL, 0x29d9c998L, 0xb0d09822L, 0xc7d7a8b4L,
-	0x59b33d17L, 0x2eb40d81L, 0xb7bd5c3bL, 0xc0ba6cadL,
-	0xedb88320L, 0x9abfb3b6L, 0x03b6e20cL, 0x74b1d29aL,
-	0xead54739L, 0x9dd277afL, 0x04db2615L, 0x73dc1683L,
-	0xe3630b12L, 0x94643b84L, 0x0d6d6a3eL, 0x7a6a5aa8L,
-	0xe40ecf0bL, 0x9309ff9dL, 0x0a00ae27L, 0x7d079eb1L,
-	0xf00f9344L, 0x8708a3d2L, 0x1e01f268L, 0x6906c2feL,
-	0xf762575dL, 0x806567cbL, 0x196c3671L, 0x6e6b06e7L,
-	0xfed41b76L, 0x89d32be0L, 0x10da7a5aL, 0x67dd4accL,
-	0xf9b9df6fL, 0x8ebeeff9L, 0x17b7be43L, 0x60b08ed5L,
-	0xd6d6a3e8L, 0xa1d1937eL, 0x38d8c2c4L, 0x4fdff252L,
-	0xd1bb67f1L, 0xa6bc5767L, 0x3fb506ddL, 0x48b2364bL,
-	0xd80d2bdaL, 0xaf0a1b4cL, 0x36034af6L, 0x41047a60L,
-	0xdf60efc3L, 0xa867df55L, 0x316e8eefL, 0x4669be79L,
-	0xcb61b38cL, 0xbc66831aL, 0x256fd2a0L, 0x5268e236L,
-	0xcc0c7795L, 0xbb0b4703L, 0x220216b9L, 0x5505262fL,
-	0xc5ba3bbeL, 0xb2bd0b28L, 0x2bb45a92L, 0x5cb36a04L,
-	0xc2d7ffa7L, 0xb5d0cf31L, 0x2cd99e8bL, 0x5bdeae1dL,
-	0x9b64c2b0L, 0xec63f226L, 0x756aa39cL, 0x026d930aL,
-	0x9c0906a9L, 0xeb0e363fL, 0x72076785L, 0x05005713L,
-	0x95bf4a82L, 0xe2b87a14L, 0x7bb12baeL, 0x0cb61b38L,
-	0x92d28e9bL, 0xe5d5be0dL, 0x7cdcefb7L, 0x0bdbdf21L,
-	0x86d3d2d4L, 0xf1d4e242L, 0x68ddb3f8L, 0x1fda836eL,
-	0x81be16cdL, 0xf6b9265bL, 0x6fb077e1L, 0x18b74777L,
-	0x88085ae6L, 0xff0f6a70L, 0x66063bcaL, 0x11010b5cL,
-	0x8f659effL, 0xf862ae69L, 0x616bffd3L, 0x166ccf45L,
-	0xa00ae278L, 0xd70dd2eeL, 0x4e048354L, 0x3903b3c2L,
-	0xa7672661L, 0xd06016f7L, 0x4969474dL, 0x3e6e77dbL,
-	0xaed16a4aL, 0xd9d65adcL, 0x40df0b66L, 0x37d83bf0L,
-	0xa9bcae53L, 0xdebb9ec5L, 0x47b2cf7fL, 0x30b5ffe9L,
-	0xbdbdf21cL, 0xcabac28aL, 0x53b39330L, 0x24b4a3a6L,
-	0xbad03605L, 0xcdd70693L, 0x54de5729L, 0x23d967bfL,
-	0xb3667a2eL, 0xc4614ab8L, 0x5d681b02L, 0x2a6f2b94L,
-	0xb40bbe37L, 0xc30c8ea1L, 0x5a05df1bL, 0x2d02ef8dL
-};
-
-
-uint32_t cal_crc32(uint8_t *buf, uint32_t size)
-{
-	uint32_t i, crc;
-	crc = 0xFFFFFFFF;
-
-	for (i = 0; i < size; i++) {
-		crc = crc32tab[(crc ^ buf[i]) & 0xff] ^ (crc >> 8);
-	}
-
-	return crc ^ 0xFFFFFFFF;
-}
-*/
-
-
diff --git a/application/fsbl/alfsbl_sec.h b/application/fsbl/alfsbl_sec.h
deleted file mode 100755
index e1e6e97..0000000
--- a/application/fsbl/alfsbl_sec.h
+++ /dev/null
@@ -1,292 +0,0 @@
-/*
- * alfsbl_sec.h
- *
- *  Created on: May 25, 2022
- *      Author: qsxu
- */
-
-#ifndef ALFSBL_SEC_H_
-#define ALFSBL_SEC_H_
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#include <stdint.h>
-#include "alfsbl_hw.h"
-
-#define PPK_BYTE_LENGTH  (64U)
-#define SPK_BYTE_LENGTH  (64U)
-
-#define HASH_BYTE_LENGTH (32U)
-
-#define EFUSE_SEC_CTRL                   (SYSCTRL_S_EFUSE_GLB18)
-#define EFUSE_AUTH_TYPE_OFFSET           (8U)
-#define EFUSE_AUTH_TYPE_MASK             (0x03U << EFUSE_AUTH_TYPE_OFFSET)
-#define EFUSE_AUTH_TYPE_HEADER_SET       (0x00U << EFUSE_AUTH_TYPE_OFFSET)
-#define EFUSE_AUTH_TYPE_SM2              (0x01U << EFUSE_AUTH_TYPE_OFFSET)
-#define EFUSE_AUTH_TYPE_ECC256           (0x02U << EFUSE_AUTH_TYPE_OFFSET)
-
-#define EFUSE_ENC_TYPE_OFFSET            (10U)
-#define EFUSE_ENC_TYPE_MASK              (0x03U << EFUSE_ENC_TYPE_OFFSET)
-#define EFUSE_ENC_TYPE_HEADER_SET        (0x00U << EFUSE_ENC_TYPE_OFFSET)
-#define EFUSE_ENC_TYPE_SM4               (0x01U << EFUSE_ENC_TYPE_OFFSET)
-#define EFUSE_ENC_TYPE_AES256            (0x02U << EFUSE_ENC_TYPE_OFFSET)
-
-#define EFUSE_PPK_HASH_TYPE_OFFSET       (12U)
-#define EFUSE_PPK_HASH_TYPE_MASK         (0x03U << EFUSE_PPK_HASH_TYPE_OFFSET)
-#define EFUSE_PPK_HASH_TYPE_HEADER_SET   (0x00U << EFUSE_PPK_HASH_TYPE_OFFSET)
-#define EFUSE_PPK_HASH_TYPE_SM3          (0x01U << EFUSE_PPK_HASH_TYPE_OFFSET)
-#define EFUSE_PPK_HASH_TYPE_SHA256       (0x02U << EFUSE_PPK_HASH_TYPE_OFFSET)
-
-#define EFUSE_ENC_KEY0_INVALID_OFFSET    (15U)
-#define EFUSE_ENC_KEY0_INVALID_MASK      (0x01U << EFUSE_ENC_KEY0_INVALID_OFFSET)
-
-#define EFUSE_ENC_KEY1_INVALID_OFFSET    (17U)
-#define EFUSE_ENC_KEY1_INVALID_MASK      (0x01U << EFUSE_ENC_KEY1_INVALID_OFFSET)
-
-#define EFUSE_ENC_KEY_SOURCE_OFFSET      (18U)
-#define EFUSE_ENC_KEY_SOURCE_MASK        (0x01U << EFUSE_ENC_KEY_SOURCE_OFFSET)
-
-#define EFUSE_PPK0_INVALID_OFFSET        (21U)
-#define EFUSE_PPK0_INVALID_MASK          (0x01U << EFUSE_PPK0_INVALID_OFFSET)
-
-#define EFUSE_PPK1_INVALID_OFFSET        (23U)
-#define EFUSE_PPK1_INVALID_MASK          (0x01U << EFUSE_PPK1_INVALID_OFFSET)
-
-#define PPK_HASH_TYPE_NONE               (0x00U)
-#define PPK_HASH_TYPE_SM3                (0x01U)
-#define PPK_HASH_TYPE_SHA256             (0x02U)
-
-/// bit[0]:     0--ECB, 1--CBC
-#define SYM_ECB (0x00)
-#define SYM_CBC (0x01)
-
-/// bit[3]:     0--enc, 1--dec
-#define SYM_ENCRYPT  (0x00)
-#define SYM_DECRYPT  (0x08)
-
-/// bit[6:4]:   001--128, 010--192, 100--256
-#define SYM_128BIT  (0x10)
-#define SYM_192BIT  (0x20)
-#define SYM_256BIT  (0x40)
-
-#define AES_BLOCK_BYTE 16  /// 128 bit
-#define SM4_BLOCK_BYTE 16  /// 128 bit
-
-/// msgram command type definition
-#define CMD_AUTH    (0XCD01)
-#define CMD_DMA     (0XCD02)
-#define CMD_ENCRYPT (0XCD03)
-#define CMD_HASH    (0XCD04)
-#define CMD_ACK     (0xAC01)
-
-/// msgram command options definition
-#define OP_AUTH_NONE       (0x00)
-#define OP_AUTH_ECC256     (0x61)
-#define OP_AUTH_SM2        (0x62)
-
-#define OP_ENCRYPT_AES256  (0x63)
-#define OP_ENCRYPT_SM4     (0x64)
-#define OP_ENCRYPT_NONE    (0x65)
-
-#define OP_HASH_SHA256     (0x66)
-#define OP_HASH_SM3        (0x67)
-#define OP_HASH_NONE       (0x68)
-
-#define OP_AUTH_PASS       (0x69)
-#define OP_AUTH_FAIL       (0x6A)
-
-#define OP_DMA_DONE        (0x6B)
-#define OP_ENCRYPT_DONE    (0x6C)
-#define OP_HASH_DONE       (0x6D)
-
-#define OP_BHDR_KEY        (0x6E)
-#define OP_USER_KEY        (0x6F)
-
-#define OP_CMD_ERROR       (0xE1)
-#define OP_CSU_ERROR       (0xE2)
-#define OP_CSU_TIMEOUT     (0xE3)
-
-
-/// RETURN VALUE for encrytion/decryption
-#define CSU_SECURE_SUCCESS                0x00
-#define CSU_SECURE_FAIL                   0x01
-#define CSU_SECURE_UNKNOWN_ERROR          0x02
-#define CSU_SECURE_NOT_SUPPORT_YET_ERROR  0x03
-#define CSU_SECURE_NOT_INITIALIZE_ERROR   0x04
-#define CSU_SECURE_OBJECT_ERROR           0x05
-#define CSU_SECURE_MEMORY_ERROR           0x06
-#define CSU_SECURE_IN_DATA_LENGTH_ERROR   0x07
-#define CSU_SECURE_IN_DATA_ERROR          0x08
-#define CSU_SECURE_HASH_OBJECT_ERROR      0x09
-#define CSU_SECURE_HASH_ERROR             0x0A
-#define CSU_SECURE_HASH_NOT_EQUAL_ERROR   0x0B
-#define CSU_SECURE_OUT_OF_RANGE_ERROR     0x0C
-#define CSU_SECURE_PARAMETER_ERROR        0x0D
-
-/**
- * System Interrupt ID
- */
-#define APU2CSU_REQ_IRQN (30)
-#define APU2CSU_ACK_IRQN (31)
-#define CSU2APU_REQ_IRQN (32)
-#define CSU2APU_ACK_IRQN (33)
-#define RPU2CSU_REQ_IRQN (34)
-#define RPU2CSU_ACK_IRQN (35)
-#define CSU2RPU_REQ_IRQN (36)
-#define CSU2RPU_ACK_IRQN (37)
-
-/**
- * System IPC registers
- */
-#define IPC_BASEADDR (0xF841F000)
-#define APU2CSU_REQ_ADDR (IPC_BASEADDR + 0x400)
-#define APU2CSU_ACK_ADDR (IPC_BASEADDR + 0x404)
-#define CSU2APU_REQ_ADDR (IPC_BASEADDR + 0x408)
-#define CSU2APU_ACK_ADDR (IPC_BASEADDR + 0x40C)
-#define RPU2CSU_REQ_ADDR (IPC_BASEADDR + 0x410)
-#define RPU2CSU_ACK_ADDR (IPC_BASEADDR + 0x414)
-#define CSU2RPU_REQ_ADDR (IPC_BASEADDR + 0x418)
-#define CSU2RPU_ACK_ADDR (IPC_BASEADDR + 0x41C)
-
-
-#define HASH_TYPE_SHA256   (0x00U)
-#define HASH_TYPE_SM3      (0x01U)
-
-#define AUTH_TYPE_ECC256   (0x00U)
-#define AUTH_TYPE_SM2      (0x01U)
-
-#define CSUDMA_DST_INCR     (0x0 << 1)
-#define CSUDMA_DST_NOINCR   (0x1 << 1)
-#define CSUDMA_SRC_INCR     (0x0 << 0)
-#define CSUDMA_SRC_NOINCR   (0x1 << 0)
-
-
-typedef struct _SecureInfo_ {
-	uint8_t  AuthType;       /// OP_AUTH_ECC256 / OP_AUTH_SM2 / OP_AUTH_NONE
-	uint8_t  HashType;       /// OP_HASH_SHA256 / OP_HASH_SM3 / OP_HASH_NONE
-	uint8_t  EncType;        /// OP_ENCRYPT_AES256 / OP_ENCRYPT_SM4 / OP_ENCRYPT_NONE
-	uint8_t  EncMode;        /// SYM_ECB / SYM_CBC, only ecb supported now
-	uint8_t  EncDir;         /// SYM_ENCRYPT / SYM_DECRYPT
-	uint8_t  KeyMode;        /// OP_BHDR_KEY / OP_USER_KEY, bootheader key or user key
-	uint8_t  CsuAddrIncMode; /// Bit1: Destination addr increment mode, Bit0: Source addr increment mode
-	uint8_t  Reserved_1[2];
-	uint32_t InputAddr;
-	uint32_t OutputAddr;
-	uint32_t DataLength;
-	uint32_t KeyAddr;
-	uint32_t IvAddr;
-	uint32_t SignatureAddr;
-	uint32_t PubKeyAddr;
-	uint32_t HashOutAddr;    /// HashOut Address for Hash process, Digest Address for Auth process
-} SecureInfo;
-
-
-
-typedef struct _SecEncHashIODef_ {
-	uint32_t  KeyAddr;
-	uint32_t  IvAddr;
-	uint32_t  InputAddr;
-	uint32_t  OutputAddr;
-	uint32_t  TotalLength;
-	uint8_t   KeyMode;    /// bootheader key or user key
-	uint8_t   EncMethod;  /// OP_ENCRYPT_AES256 / OP_ENCRYPT_SM4 / OP_ENCRYPT_NONE
-	uint8_t   EncMode;    /// ecb or cbc, only ecb supported for now
-	uint8_t   HashEnable; /// hash enable or not
-	uint32_t  HashOutAddr;/// buffer for hash, if hash enabled
-} SecEncHashIODef;
-
-
-typedef union _OpModeDef_ {
-	struct {
-		uint32_t EcbCbc    :  1;
-		uint32_t Reserved0 :  2;
-		uint32_t EncDec    :  1;
-		uint32_t AesLen    :  3;
-		uint32_t Reserved1 : 25;
-	};
-	uint32_t Bits;
-} OpModeDef;
-
-
-typedef struct _DmaParamDef_ {
-	OpModeDef OpMode;
-	uint32_t  KeyAddr;
-	uint32_t  IvAddr;
-	uint32_t  InputAddr;
-	uint32_t  TotalLength;
-	uint32_t  OutputAddr;
-	uint32_t  HashOutAddr;
-} DmaParamDef;
-
-
-typedef struct _AuthParamDef_ {
-	uint32_t PubkeyAddr;
-	uint32_t DigestAddr;
-	uint32_t SignatureAddr;
-} AuthParamDef;
-
-
-typedef struct _HashParamDef_ {
-	uint32_t DataInAddr;
-	uint32_t DataLen;
-	uint32_t HashOutAddr;
-} HashParamDef;
-
-
-typedef struct _MsgOptDef_ {
-	uint8_t Low;
-	uint8_t High;
-} MsgOptDef;
-
-
-typedef struct _SecMsgDef_ {
-	uint32_t Cmd;
-	MsgOptDef Option0;
-	MsgOptDef Option1;
-	union {
-		AuthParamDef AuthParam;
-		HashParamDef HashParam;
-		DmaParamDef  DmaParam;
-		uint32_t     Data[7];
-	};
-} SecMsgDef;
-
-
-typedef struct _AckDef_ {
-	uint32_t  Cmd;
-	MsgOptDef Option0;
-} AckDef;
-
-uint32_t AlFsbl_CalcCrc32(uint8_t *pBuffer, uint32_t Length);
-uint32_t AlFsbl_ChecksumCheck(uint8_t *pBuffer, uint32_t Length, uint32_t Checksum);
-
-uint32_t SecureIrqInit(void);
-void TriggerSecInterrupt(void);
-void MsgReceive(void);
-//uint32_t AlFsbl_Hash(uint32_t DataInAddr, uint32_t DataByteLen, uint32_t HashOutAddr, uint8_t HashType);
-//uint32_t AlFsbl_Auth(uint32_t PubKeyAddr, uint32_t SignatureAddr, uint32_t DigestAddr, uint8_t AuthType);
-//uint32_t AlFsbl_EncHash(SecEncHashIODef *pSecEncHashIOParam);
-
-uint32_t AlFsbl_CompareHash(uint8_t *pHash1, uint8_t *pHash2, uint32_t HashLen);
-
-
-uint32_t AlFsbl_DecHash_1(SecureInfo *pSecureInfo);
-uint32_t AlFsbl_Hash_1(SecureInfo *pSecureInfo);
-uint32_t AlFsbl_Auth_1(SecureInfo *pSecureInfo);
-
-uint32_t AlFsbl_CsuDmaCopy(uint32_t SrcAddr, uint32_t DestAddr, uint32_t DataByteLen, uint8_t AddrMode);
-
-//void Alfsbl_SecMsgSend(SecMsgDef *SecMsgPtr, uint32_t CmdLen);
-
-
-
-//uint32_t cal_crc32(uint8_t *buf, uint32_t size);
-
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif /* ALFSBL_SEC_H_ */
diff --git a/application/fsbl/driver/sd_emmc/FATFS/diskio.c b/application/fsbl/driver/sd_emmc/FATFS/diskio.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/FATFS/diskio.h b/application/fsbl/driver/sd_emmc/FATFS/diskio.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/FATFS/ff.c b/application/fsbl/driver/sd_emmc/FATFS/ff.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/FATFS/ff.h b/application/fsbl/driver/sd_emmc/FATFS/ff.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/FATFS/ffconf.h b/application/fsbl/driver/sd_emmc/FATFS/ffconf.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/FATFS/ffsystem.c b/application/fsbl/driver/sd_emmc/FATFS/ffsystem.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_emmc.c b/application/fsbl/driver/sd_emmc/al_emmc.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_emmc.h b/application/fsbl/driver/sd_emmc/al_emmc.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_mmc.c b/application/fsbl/driver/sd_emmc/al_mmc.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_mmc.h b/application/fsbl/driver/sd_emmc/al_mmc.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_sd.c b/application/fsbl/driver/sd_emmc/al_sd.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/driver/sd_emmc/al_sd.h b/application/fsbl/driver/sd_emmc/al_sd.h
old mode 100755
new mode 100644
diff --git a/application/fsbl/enc_test.c b/application/fsbl/enc_test.c
deleted file mode 100755
index 3aa9959..0000000
--- a/application/fsbl/enc_test.c
+++ /dev/null
@@ -1,101 +0,0 @@
-#include <stdio.h>
-
-#include "demosoc.h"
-
-#include "alfsbl_sec.h"
-#include "test_data.h"
-#include "enc_test.h"
-extern SecureInfo FsblSecInfo;
-
-extern unsigned int input_data_buff[DATA_BUFF_SIZE];
-extern unsigned int output_data_buff[DATA_BUFF_SIZE];
-extern unsigned int iv_data_buff[IV_BUFF_SIZE];
-extern unsigned int key_data_buff[KEY_BUFF_SIZE];
-extern unsigned int result_data_buff[DATA_BUFF_SIZE];
-extern unsigned int hash_data_buff[HASH_DATA_SIZE];
-
-uint32_t CsuDmaTest(SecureInfo *pSecInfo, uint8_t EncDir, uint32_t DataLen);
-
-uint32_t CheckBuf(uint32_t *Buf0, uint32_t *Buf1, uint32_t Length);
-void PrintBuf(uint32_t *Buf, uint32_t ByteLength);
-
-
-
-int enc_test_aes(void)
-{
-	uint32_t Status = 0;
-	printf("csu security test...\r\n");
-
-	SecureIrqInit();
-	AesDataInit();
-//	PrintBuf(input_data_buff, 128);
-
-	FsblSecInfo.InputAddr  = input_data_buff;
-	FsblSecInfo.OutputAddr = output_data_buff;
-	CsuDmaTest(&FsblSecInfo, SYM_ENCRYPT, 128);
-	PrintBuf(output_data_buff, 128);
-
-
-	FsblSecInfo.InputAddr  = output_data_buff;
-	FsblSecInfo.OutputAddr = result_data_buff;
-	CsuDmaTest(&FsblSecInfo, SYM_DECRYPT, 128);
-	PrintBuf(result_data_buff, 128);
-
-	Status = CheckBuf(result_data_buff, input_data_buff, 128);
-
-	return 0;
-}
-
-
-uint32_t CsuDmaTest(SecureInfo *pSecInfo, uint8_t EncDir, uint32_t DataLen)
-{
-	uint32_t Status;
-
-	pSecInfo->AuthType   = OP_AUTH_NONE;
-	pSecInfo->HashType   = OP_HASH_NONE;
-	pSecInfo->EncType    = OP_ENCRYPT_AES256;
-	pSecInfo->EncMode    = SYM_ECB;
-	pSecInfo->EncDir     = EncDir;
-	pSecInfo->KeyMode    = OP_USER_KEY;
-	pSecInfo->DataLength = DataLen;
-	pSecInfo->KeyAddr    = key_data_buff;
-
-	Status = AlFsbl_DecHash_1(pSecInfo);
-
-	return Status;
-}
-
-
-uint32_t CheckBuf(uint32_t *Buf0, uint32_t *Buf1, uint32_t Length)
-{
-	uint32_t i;
-    /* Check for DMA transfer result */
-    for (i = 0; i < (Length / 4); i++) {
-        if (Buf0[i] != Buf1[i]) {
-            printf("Data not equal\r\n");
-            return AL_FAILED;
-        }
-    }
-    printf("Data equal\r\n");
-    return AL_SUCCESS;
-}
-
-
-void PrintBuf(uint32_t *Buf, uint32_t ByteLength)
-{
-	uint32_t i;
-	for(i = 0; i < (ByteLength / 4); i++) {
-		printf("%08x ", Buf[i]);
-		if((i + 1) % 4 == 0) {
-			printf("\r\n");
-		}
-	}
-	printf("\r\n");
-}
-
-
-
-
-
-
-
diff --git a/application/fsbl/enc_test.h b/application/fsbl/enc_test.h
deleted file mode 100755
index 406e15a..0000000
--- a/application/fsbl/enc_test.h
+++ /dev/null
@@ -1,4 +0,0 @@
-
-
-
-int enc_test_aes(void);
diff --git a/application/fsbl/make.sh b/application/fsbl/make.sh
index a9030e0..058aced 100755
--- a/application/fsbl/make.sh
+++ b/application/fsbl/make.sh
@@ -1,5 +1,5 @@
 #!/bin/csh
 
 
-make DOWNLOAD=ocm SOC=demosoc CORE=ux600 dasm
+make DOWNLOAD=ocm SOC=demosoc CORE=ux600 dasm FSBL_SIMU_SKIP_HEADERCHECK=yes FSBL_SIMU_PL_TEST_MODE=1
 
diff --git a/application/fsbl/printf.c b/application/fsbl/printf.c
old mode 100755
new mode 100644
index 9197cb2..d593aff
--- a/application/fsbl/printf.c
+++ b/application/fsbl/printf.c
@@ -26,10 +26,14 @@
 #include <stdarg.h>
 
 #include "alfsbl_hw.h"
-/*
+
 int putchar(int c)
 {
+#if defined SIMU_AL9000_DV
 	*(volatile unsigned char *)(0x80000000ULL) = c;
+#else
+	/// todo
+#endif
 
 	return c;
 }
@@ -79,7 +83,7 @@ static int  __attribute__((optimize("Os"))) prints(char **out, const char *strin
 	return pc;
 }
 
-// the following should be enough for 32 bit int 
+/* the following should be enough for 32 bit int */
 #define PRINT_BUF_LEN 12
 
 static int  __attribute__((optimize("Os"))) printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
@@ -171,7 +175,7 @@ static int  __attribute__((optimize("Os"))) print( char **out, const char *forma
 				continue;
 			}
 			if( *format == 'c' ) {
-				// char are converted to int then pushed on the stack 
+				/* char are converted to int then pushed on the stack */
 				scr[0] = (char)va_arg( args, int );
 				scr[1] = '\0';
 				pc += prints (out, scr, width, pad);
@@ -215,10 +219,9 @@ int  __attribute__((optimize("Os"))) snprintf( char *buf, unsigned int count, co
         return print( &buf, format, args );
 }
 
-// To keep linker happy. 
+/* To keep linker happy. */
 int	 __attribute__((optimize("Os"))) write( int i, char* c, int n)
 {
 	return 0;
 }
 
-*/
\ No newline at end of file
diff --git a/application/fsbl/test_data.c b/application/fsbl/test_data.c
old mode 100755
new mode 100644
diff --git a/application/fsbl/test_data.h b/application/fsbl/test_data.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/diskio.c b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/diskio.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/diskio.h b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/diskio.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ff.c b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ff.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ff.h b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ff.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ffconf.h b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/ffconf.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/integer.h b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/integer.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/syscall.c b/application/romcode_test_case/sd_emmc_romcode_testcase/FATFS/syscall.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/Makefile b/application/romcode_test_case/sd_emmc_romcode_testcase/Makefile
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc.c b/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc.h b/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc_write.c b/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc_write.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc_write.h b/application/romcode_test_case/sd_emmc_romcode_testcase/al_emmc_write.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_mmc.c b/application/romcode_test_case/sd_emmc_romcode_testcase/al_mmc.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_mmc.h b/application/romcode_test_case/sd_emmc_romcode_testcase/al_mmc.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd.c b/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd.h b/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd_write.c b/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd_write.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd_write.h b/application/romcode_test_case/sd_emmc_romcode_testcase/al_sd_write.h
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/emmc_test.c b/application/romcode_test_case/sd_emmc_romcode_testcase/emmc_test.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/main.c b/application/romcode_test_case/sd_emmc_romcode_testcase/main.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/sd_test.c b/application/romcode_test_case/sd_emmc_romcode_testcase/sd_test.c
old mode 100755
new mode 100644
diff --git a/application/romcode_test_case/sd_emmc_romcode_testcase/sys.h b/application/romcode_test_case/sd_emmc_romcode_testcase/sys.h
old mode 100755
new mode 100644
diff --git a/build_rpu.sh b/build_rpu.sh
old mode 100755
new mode 100644
diff --git a/gitlab-ci.yml b/gitlab-ci.yml
old mode 100755
new mode 100644
