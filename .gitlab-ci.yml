# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

check:              # This job runs in the .pre stage, which runs first.
  stage: .pre
  tags: 
    - test
  image: 
    name: anlogic/al9000-ci:v2
  script:
    - |
      echo commit message: ${CI_COMMIT_MESSAGE}
      echo commit sha: ${CI_COMMIT_SHA}
      echo ${CI_COMMIT_MESSAGE} | cz check

build-apu-job:       # This job runs in the build stage.
  stage: build
  tags: 
    - build
  image: 
    name: anlogic/al9000-ci:v2
  script:
    - python --version ; pip --version  # For debugging
    - pip install -i https://pypi.tuna.tsinghua.edu.cn/simple scons
    - python -c "import os; os.chdir(\"./3rdparty/os/RT-Thread/rt-thread\"); import tools.menuconfig; tools.menuconfig.touch_env()"
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/driver/ps_driver_test dr1m90 ocm $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/driver/ps_driver_test dr1m90 ddr $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/solutions/demo/baremetal dr1m90 ddr $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/utest dr1m90 ddr $CI_PROJECT_DIR $CI_DEBUG

build-rpu-job:       # This job runs in the build stage.
  stage: build
  tags: 
    - build
  image: 
    name: anlogic/al9000-ci:v2
  script:
    - python --version ; pip --version  # For debugging
    - pip install -i https://pypi.tuna.tsinghua.edu.cn/simple scons
    - python -c "import os; os.chdir(\"./3rdparty/os/RT-Thread/rt-thread\"); import tools.menuconfig; tools.menuconfig.touch_env()"
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/driver/ps_driver_test dr1v90 ocm $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/driver/ps_driver_test dr1v90 ddr $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/solutions/demo/baremetal dr1v90 ddr $CI_PROJECT_DIR $CI_DEBUG
    - python $CI_PROJECT_DIR/tools/ci/make_all.py $CI_PROJECT_DIR/fpsoc/utest dr1v90 ddr $CI_PROJECT_DIR $CI_DEBUG

build-fsbl-job:       # This job runs in the build stage.
  stage: build
  tags: 
    - build
  image: 
    name: anlogic/al9000-ci:v2
  script:
    - cd $CI_PROJECT_DIR/solutions/demo/fsbl
    - source $CI_PROJECT_DIR/solutions/demo/fsbl/make.sh

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   tags:
#     - test
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
